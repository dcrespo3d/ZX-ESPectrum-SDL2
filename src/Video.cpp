///////////////////////////////////////////////////////////////////////////////
//
// ZX-ESPectrum-IDF - Sinclair ZX Spectrum emulator for ESP32 / IDF
//
// VIDEO EMULATION
//
// Copyright (c) 2023 Víctor Iborra [Eremus] and David Crespo [dcrespo3d]
// https://github.com/EremusOne/ZX-ESPectrum-IDF
//
// Based on ZX-ESPectrum-Wiimote
// Copyright (c) 2020, 2022 David Crespo [dcrespo3d]
// https://github.com/dcrespo3d/ZX-ESPectrum-Wiimote
//
// Based on previous work by Ramón Martinez and Jorge Fuertes
// https://github.com/rampa069/ZX-ESPectrum
//
// Original project by Pete Todd
// https://github.com/retrogubbins/paseVGA
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//

#include "Video.h"
#include "CPU.h"
#include "MemESP.h"
#include "Config.h"
#include "OSDMain.h"
#include "hardconfig.h"
#include "hardpins.h"
#include "Z80_JLS/z80.h"
#include "Z80_JLS/z80operations.h"

VGA6Bit VIDEO::vga;
uint8_t VIDEO::borderColor = 0;
uint32_t VIDEO::brd;
uint32_t VIDEO::border32[8];
uint8_t VIDEO::flashing = 0;
uint8_t VIDEO::flash_ctr= 0;
bool VIDEO::OSD = false;
uint8_t VIDEO::tStatesPerLine;
int VIDEO::tStatesScreen;
uint8_t* VIDEO::grmem;

uint8_t (*VIDEO::getFloatBusData)() = &VIDEO::getFloatBusData48;

#ifdef NO_VIDEO
void (*VIDEO::Draw)(unsigned int, bool) = &VIDEO::NoVideo;
#else
void (*VIDEO::Draw)(unsigned int, bool) = &VIDEO::Blank;
#endif

void (*VIDEO::DrawOSD43)(unsigned int, bool) = &VIDEO::BottomBorder;
void (*VIDEO::DrawOSD169)(unsigned int, bool) = &VIDEO::MainScreen;

void precalcColors() {
    
    for (int i = 0; i < NUM_SPECTRUM_COLORS; i++) {
        spectrum_colors[i] = (spectrum_colors[i] & VIDEO::vga.RGBAXMask) | VIDEO::vga.SBits;
    }

}

// // ALUBYTES 
// const uint32_t AluBytes[16][256]={
// 0xc0c0c0c0,0xc0c0c0c0,0xc0c0c0c0,0xc0c0c0c0,0xc0c0c0c0,0xc0c0c0c0,0xc0c0c0c0,0xc0c0c0c0,0xe0e0e0e0,0xe0e0e0e0,0xe0e0e0e0,0xe0e0e0e0,0xe0e0e0e0,0xe0e0e0e0,0xe0e0e0e0,0xe0e0e0e0,0xc2c2c2c2,0xc2c2c2c2,0xc2c2c2c2,0xc2c2c2c2,0xc2c2c2c2,0xc2c2c2c2,0xc2c2c2c2,0xc2c2c2c2,0xe2e2e2e2,0xe2e2e2e2,0xe2e2e2e2,0xe2e2e2e2,0xe2e2e2e2,0xe2e2e2e2,0xe2e2e2e2,0xe2e2e2e2,0xc8c8c8c8,0xc8c8c8c8,0xc8c8c8c8,0xc8c8c8c8,0xc8c8c8c8,0xc8c8c8c8,0xc8c8c8c8,0xc8c8c8c8,0xe8e8e8e8,0xe8e8e8e8,0xe8e8e8e8,0xe8e8e8e8,0xe8e8e8e8,0xe8e8e8e8,0xe8e8e8e8,0xe8e8e8e8,0xcacacaca,0xcacacaca,0xcacacaca,0xcacacaca,0xcacacaca,0xcacacaca,0xcacacaca,0xcacacaca,0xeaeaeaea,0xeaeaeaea,0xeaeaeaea,0xeaeaeaea,0xeaeaeaea,0xeaeaeaea,0xeaeaeaea,0xeaeaeaea,0xc0c0c0c0,0xc0c0c0c0,0xc0c0c0c0,0xc0c0c0c0,0xc0c0c0c0,0xc0c0c0c0,0xc0c0c0c0,0xc0c0c0c0,0xf0f0f0f0,0xf0f0f0f0,0xf0f0f0f0,0xf0f0f0f0,0xf0f0f0f0,0xf0f0f0f0,0xf0f0f0f0,0xf0f0f0f0,0xc3c3c3c3,0xc3c3c3c3,0xc3c3c3c3,0xc3c3c3c3,0xc3c3c3c3,0xc3c3c3c3,0xc3c3c3c3,0xc3c3c3c3,0xf3f3f3f3,0xf3f3f3f3,0xf3f3f3f3,0xf3f3f3f3,0xf3f3f3f3,0xf3f3f3f3,0xf3f3f3f3,0xf3f3f3f3,0xcccccccc,0xcccccccc,0xcccccccc,0xcccccccc,0xcccccccc,0xcccccccc,0xcccccccc,0xcccccccc,0xfcfcfcfc,0xfcfcfcfc,0xfcfcfcfc,0xfcfcfcfc,0xfcfcfcfc,0xfcfcfcfc,0xfcfcfcfc,0xfcfcfcfc,0xcfcfcfcf,0xcfcfcfcf,0xcfcfcfcf,0xcfcfcfcf,0xcfcfcfcf,0xcfcfcfcf,0xcfcfcfcf,0xcfcfcfcf,0xffffffff,0xffffffff,0xffffffff,0xffffffff,0xffffffff,0xffffffff,0xffffffff,0xffffffff,0xc0c0c0c0,0xc0c0c0c0,0xc0c0c0c0,0xc0c0c0c0,0xc0c0c0c0,0xc0c0c0c0,0xc0c0c0c0,0xc0c0c0c0,0xe0e0e0e0,0xe0e0e0e0,0xe0e0e0e0,0xe0e0e0e0,0xe0e0e0e0,0xe0e0e0e0,0xe0e0e0e0,0xe0e0e0e0,0xc2c2c2c2,0xc2c2c2c2,0xc2c2c2c2,0xc2c2c2c2,0xc2c2c2c2,0xc2c2c2c2,0xc2c2c2c2,0xc2c2c2c2,0xe2e2e2e2,0xe2e2e2e2,0xe2e2e2e2,0xe2e2e2e2,0xe2e2e2e2,0xe2e2e2e2,0xe2e2e2e2,0xe2e2e2e2,0xc8c8c8c8,0xc8c8c8c8,0xc8c8c8c8,0xc8c8c8c8,0xc8c8c8c8,0xc8c8c8c8,0xc8c8c8c8,0xc8c8c8c8,0xe8e8e8e8,0xe8e8e8e8,0xe8e8e8e8,0xe8e8e8e8,0xe8e8e8e8,0xe8e8e8e8,0xe8e8e8e8,0xe8e8e8e8,0xcacacaca,0xcacacaca,0xcacacaca,0xcacacaca,0xcacacaca,0xcacacaca,0xcacacaca,0xcacacaca,0xeaeaeaea,0xeaeaeaea,0xeaeaeaea,0xeaeaeaea,0xeaeaeaea,0xeaeaeaea,0xeaeaeaea,0xeaeaeaea,0xc0c0c0c0,0xc0c0c0c0,0xc0c0c0c0,0xc0c0c0c0,0xc0c0c0c0,0xc0c0c0c0,0xc0c0c0c0,0xc0c0c0c0,0xf0f0f0f0,0xf0f0f0f0,0xf0f0f0f0,0xf0f0f0f0,0xf0f0f0f0,0xf0f0f0f0,0xf0f0f0f0,0xf0f0f0f0,0xc3c3c3c3,0xc3c3c3c3,0xc3c3c3c3,0xc3c3c3c3,0xc3c3c3c3,0xc3c3c3c3,0xc3c3c3c3,0xc3c3c3c3,0xf3f3f3f3,0xf3f3f3f3,0xf3f3f3f3,0xf3f3f3f3,0xf3f3f3f3,0xf3f3f3f3,0xf3f3f3f3,0xf3f3f3f3,0xcccccccc,0xcccccccc,0xcccccccc,0xcccccccc,0xcccccccc,0xcccccccc,0xcccccccc,0xcccccccc,0xfcfcfcfc,0xfcfcfcfc,0xfcfcfcfc,0xfcfcfcfc,0xfcfcfcfc,0xfcfcfcfc,0xfcfcfcfc,0xfcfcfcfc,0xcfcfcfcf,0xcfcfcfcf,0xcfcfcfcf,0xcfcfcfcf,0xcfcfcfcf,0xcfcfcfcf,0xcfcfcfcf,0xcfcfcfcf,0xffffffff,0xffffffff,0xffffffff,0xffffffff,0xffffffff,0xffffffff,0xffffffff,0xffffffff,
// 0xc0c0c0c0,0xc0c0e0c0,0xc0c0c2c0,0xc0c0e2c0,0xc0c0c8c0,0xc0c0e8c0,0xc0c0cac0,0xc0c0eac0,0xe0e0c0e0,0xe0e0e0e0,0xe0e0c2e0,0xe0e0e2e0,0xe0e0c8e0,0xe0e0e8e0,0xe0e0cae0,0xe0e0eae0,0xc2c2c0c2,0xc2c2e0c2,0xc2c2c2c2,0xc2c2e2c2,0xc2c2c8c2,0xc2c2e8c2,0xc2c2cac2,0xc2c2eac2,0xe2e2c0e2,0xe2e2e0e2,0xe2e2c2e2,0xe2e2e2e2,0xe2e2c8e2,0xe2e2e8e2,0xe2e2cae2,0xe2e2eae2,0xc8c8c0c8,0xc8c8e0c8,0xc8c8c2c8,0xc8c8e2c8,0xc8c8c8c8,0xc8c8e8c8,0xc8c8cac8,0xc8c8eac8,0xe8e8c0e8,0xe8e8e0e8,0xe8e8c2e8,0xe8e8e2e8,0xe8e8c8e8,0xe8e8e8e8,0xe8e8cae8,0xe8e8eae8,0xcacac0ca,0xcacae0ca,0xcacac2ca,0xcacae2ca,0xcacac8ca,0xcacae8ca,0xcacacaca,0xcacaeaca,0xeaeac0ea,0xeaeae0ea,0xeaeac2ea,0xeaeae2ea,0xeaeac8ea,0xeaeae8ea,0xeaeacaea,0xeaeaeaea,0xc0c0c0c0,0xc0c0f0c0,0xc0c0c3c0,0xc0c0f3c0,0xc0c0ccc0,0xc0c0fcc0,0xc0c0cfc0,0xc0c0ffc0,0xf0f0c0f0,0xf0f0f0f0,0xf0f0c3f0,0xf0f0f3f0,0xf0f0ccf0,0xf0f0fcf0,0xf0f0cff0,0xf0f0fff0,0xc3c3c0c3,0xc3c3f0c3,0xc3c3c3c3,0xc3c3f3c3,0xc3c3ccc3,0xc3c3fcc3,0xc3c3cfc3,0xc3c3ffc3,0xf3f3c0f3,0xf3f3f0f3,0xf3f3c3f3,0xf3f3f3f3,0xf3f3ccf3,0xf3f3fcf3,0xf3f3cff3,0xf3f3fff3,0xccccc0cc,0xccccf0cc,0xccccc3cc,0xccccf3cc,0xcccccccc,0xccccfccc,0xcccccfcc,0xccccffcc,0xfcfcc0fc,0xfcfcf0fc,0xfcfcc3fc,0xfcfcf3fc,0xfcfcccfc,0xfcfcfcfc,0xfcfccffc,0xfcfcfffc,0xcfcfc0cf,0xcfcff0cf,0xcfcfc3cf,0xcfcff3cf,0xcfcfcccf,0xcfcffccf,0xcfcfcfcf,0xcfcfffcf,0xffffc0ff,0xfffff0ff,0xffffc3ff,0xfffff3ff,0xffffccff,0xfffffcff,0xffffcfff,0xffffffff,0xc0c0c0c0,0xc0c0e0c0,0xc0c0c2c0,0xc0c0e2c0,0xc0c0c8c0,0xc0c0e8c0,0xc0c0cac0,0xc0c0eac0,0xe0e0c0e0,0xe0e0e0e0,0xe0e0c2e0,0xe0e0e2e0,0xe0e0c8e0,0xe0e0e8e0,0xe0e0cae0,0xe0e0eae0,0xc2c2c0c2,0xc2c2e0c2,0xc2c2c2c2,0xc2c2e2c2,0xc2c2c8c2,0xc2c2e8c2,0xc2c2cac2,0xc2c2eac2,0xe2e2c0e2,0xe2e2e0e2,0xe2e2c2e2,0xe2e2e2e2,0xe2e2c8e2,0xe2e2e8e2,0xe2e2cae2,0xe2e2eae2,0xc8c8c0c8,0xc8c8e0c8,0xc8c8c2c8,0xc8c8e2c8,0xc8c8c8c8,0xc8c8e8c8,0xc8c8cac8,0xc8c8eac8,0xe8e8c0e8,0xe8e8e0e8,0xe8e8c2e8,0xe8e8e2e8,0xe8e8c8e8,0xe8e8e8e8,0xe8e8cae8,0xe8e8eae8,0xcacac0ca,0xcacae0ca,0xcacac2ca,0xcacae2ca,0xcacac8ca,0xcacae8ca,0xcacacaca,0xcacaeaca,0xeaeac0ea,0xeaeae0ea,0xeaeac2ea,0xeaeae2ea,0xeaeac8ea,0xeaeae8ea,0xeaeacaea,0xeaeaeaea,0xc0c0c0c0,0xc0c0f0c0,0xc0c0c3c0,0xc0c0f3c0,0xc0c0ccc0,0xc0c0fcc0,0xc0c0cfc0,0xc0c0ffc0,0xf0f0c0f0,0xf0f0f0f0,0xf0f0c3f0,0xf0f0f3f0,0xf0f0ccf0,0xf0f0fcf0,0xf0f0cff0,0xf0f0fff0,0xc3c3c0c3,0xc3c3f0c3,0xc3c3c3c3,0xc3c3f3c3,0xc3c3ccc3,0xc3c3fcc3,0xc3c3cfc3,0xc3c3ffc3,0xf3f3c0f3,0xf3f3f0f3,0xf3f3c3f3,0xf3f3f3f3,0xf3f3ccf3,0xf3f3fcf3,0xf3f3cff3,0xf3f3fff3,0xccccc0cc,0xccccf0cc,0xccccc3cc,0xccccf3cc,0xcccccccc,0xccccfccc,0xcccccfcc,0xccccffcc,0xfcfcc0fc,0xfcfcf0fc,0xfcfcc3fc,0xfcfcf3fc,0xfcfcccfc,0xfcfcfcfc,0xfcfccffc,0xfcfcfffc,0xcfcfc0cf,0xcfcff0cf,0xcfcfc3cf,0xcfcff3cf,0xcfcfcccf,0xcfcffccf,0xcfcfcfcf,0xcfcfffcf,0xffffc0ff,0xfffff0ff,0xffffc3ff,0xfffff3ff,0xffffccff,0xfffffcff,0xffffcfff,0xffffffff,
// 0xc0c0c0c0,0xc0c0c0e0,0xc0c0c0c2,0xc0c0c0e2,0xc0c0c0c8,0xc0c0c0e8,0xc0c0c0ca,0xc0c0c0ea,0xe0e0e0c0,0xe0e0e0e0,0xe0e0e0c2,0xe0e0e0e2,0xe0e0e0c8,0xe0e0e0e8,0xe0e0e0ca,0xe0e0e0ea,0xc2c2c2c0,0xc2c2c2e0,0xc2c2c2c2,0xc2c2c2e2,0xc2c2c2c8,0xc2c2c2e8,0xc2c2c2ca,0xc2c2c2ea,0xe2e2e2c0,0xe2e2e2e0,0xe2e2e2c2,0xe2e2e2e2,0xe2e2e2c8,0xe2e2e2e8,0xe2e2e2ca,0xe2e2e2ea,0xc8c8c8c0,0xc8c8c8e0,0xc8c8c8c2,0xc8c8c8e2,0xc8c8c8c8,0xc8c8c8e8,0xc8c8c8ca,0xc8c8c8ea,0xe8e8e8c0,0xe8e8e8e0,0xe8e8e8c2,0xe8e8e8e2,0xe8e8e8c8,0xe8e8e8e8,0xe8e8e8ca,0xe8e8e8ea,0xcacacac0,0xcacacae0,0xcacacac2,0xcacacae2,0xcacacac8,0xcacacae8,0xcacacaca,0xcacacaea,0xeaeaeac0,0xeaeaeae0,0xeaeaeac2,0xeaeaeae2,0xeaeaeac8,0xeaeaeae8,0xeaeaeaca,0xeaeaeaea,0xc0c0c0c0,0xc0c0c0f0,0xc0c0c0c3,0xc0c0c0f3,0xc0c0c0cc,0xc0c0c0fc,0xc0c0c0cf,0xc0c0c0ff,0xf0f0f0c0,0xf0f0f0f0,0xf0f0f0c3,0xf0f0f0f3,0xf0f0f0cc,0xf0f0f0fc,0xf0f0f0cf,0xf0f0f0ff,0xc3c3c3c0,0xc3c3c3f0,0xc3c3c3c3,0xc3c3c3f3,0xc3c3c3cc,0xc3c3c3fc,0xc3c3c3cf,0xc3c3c3ff,0xf3f3f3c0,0xf3f3f3f0,0xf3f3f3c3,0xf3f3f3f3,0xf3f3f3cc,0xf3f3f3fc,0xf3f3f3cf,0xf3f3f3ff,0xccccccc0,0xccccccf0,0xccccccc3,0xccccccf3,0xcccccccc,0xccccccfc,0xcccccccf,0xccccccff,0xfcfcfcc0,0xfcfcfcf0,0xfcfcfcc3,0xfcfcfcf3,0xfcfcfccc,0xfcfcfcfc,0xfcfcfccf,0xfcfcfcff,0xcfcfcfc0,0xcfcfcff0,0xcfcfcfc3,0xcfcfcff3,0xcfcfcfcc,0xcfcfcffc,0xcfcfcfcf,0xcfcfcfff,0xffffffc0,0xfffffff0,0xffffffc3,0xfffffff3,0xffffffcc,0xfffffffc,0xffffffcf,0xffffffff,0xc0c0c0c0,0xc0c0c0e0,0xc0c0c0c2,0xc0c0c0e2,0xc0c0c0c8,0xc0c0c0e8,0xc0c0c0ca,0xc0c0c0ea,0xe0e0e0c0,0xe0e0e0e0,0xe0e0e0c2,0xe0e0e0e2,0xe0e0e0c8,0xe0e0e0e8,0xe0e0e0ca,0xe0e0e0ea,0xc2c2c2c0,0xc2c2c2e0,0xc2c2c2c2,0xc2c2c2e2,0xc2c2c2c8,0xc2c2c2e8,0xc2c2c2ca,0xc2c2c2ea,0xe2e2e2c0,0xe2e2e2e0,0xe2e2e2c2,0xe2e2e2e2,0xe2e2e2c8,0xe2e2e2e8,0xe2e2e2ca,0xe2e2e2ea,0xc8c8c8c0,0xc8c8c8e0,0xc8c8c8c2,0xc8c8c8e2,0xc8c8c8c8,0xc8c8c8e8,0xc8c8c8ca,0xc8c8c8ea,0xe8e8e8c0,0xe8e8e8e0,0xe8e8e8c2,0xe8e8e8e2,0xe8e8e8c8,0xe8e8e8e8,0xe8e8e8ca,0xe8e8e8ea,0xcacacac0,0xcacacae0,0xcacacac2,0xcacacae2,0xcacacac8,0xcacacae8,0xcacacaca,0xcacacaea,0xeaeaeac0,0xeaeaeae0,0xeaeaeac2,0xeaeaeae2,0xeaeaeac8,0xeaeaeae8,0xeaeaeaca,0xeaeaeaea,0xc0c0c0c0,0xc0c0c0f0,0xc0c0c0c3,0xc0c0c0f3,0xc0c0c0cc,0xc0c0c0fc,0xc0c0c0cf,0xc0c0c0ff,0xf0f0f0c0,0xf0f0f0f0,0xf0f0f0c3,0xf0f0f0f3,0xf0f0f0cc,0xf0f0f0fc,0xf0f0f0cf,0xf0f0f0ff,0xc3c3c3c0,0xc3c3c3f0,0xc3c3c3c3,0xc3c3c3f3,0xc3c3c3cc,0xc3c3c3fc,0xc3c3c3cf,0xc3c3c3ff,0xf3f3f3c0,0xf3f3f3f0,0xf3f3f3c3,0xf3f3f3f3,0xf3f3f3cc,0xf3f3f3fc,0xf3f3f3cf,0xf3f3f3ff,0xccccccc0,0xccccccf0,0xccccccc3,0xccccccf3,0xcccccccc,0xccccccfc,0xcccccccf,0xccccccff,0xfcfcfcc0,0xfcfcfcf0,0xfcfcfcc3,0xfcfcfcf3,0xfcfcfccc,0xfcfcfcfc,0xfcfcfccf,0xfcfcfcff,0xcfcfcfc0,0xcfcfcff0,0xcfcfcfc3,0xcfcfcff3,0xcfcfcfcc,0xcfcfcffc,0xcfcfcfcf,0xcfcfcfff,0xffffffc0,0xfffffff0,0xffffffc3,0xfffffff3,0xffffffcc,0xfffffffc,0xffffffcf,0xffffffff,
// 0xc0c0c0c0,0xc0c0e0e0,0xc0c0c2c2,0xc0c0e2e2,0xc0c0c8c8,0xc0c0e8e8,0xc0c0caca,0xc0c0eaea,0xe0e0c0c0,0xe0e0e0e0,0xe0e0c2c2,0xe0e0e2e2,0xe0e0c8c8,0xe0e0e8e8,0xe0e0caca,0xe0e0eaea,0xc2c2c0c0,0xc2c2e0e0,0xc2c2c2c2,0xc2c2e2e2,0xc2c2c8c8,0xc2c2e8e8,0xc2c2caca,0xc2c2eaea,0xe2e2c0c0,0xe2e2e0e0,0xe2e2c2c2,0xe2e2e2e2,0xe2e2c8c8,0xe2e2e8e8,0xe2e2caca,0xe2e2eaea,0xc8c8c0c0,0xc8c8e0e0,0xc8c8c2c2,0xc8c8e2e2,0xc8c8c8c8,0xc8c8e8e8,0xc8c8caca,0xc8c8eaea,0xe8e8c0c0,0xe8e8e0e0,0xe8e8c2c2,0xe8e8e2e2,0xe8e8c8c8,0xe8e8e8e8,0xe8e8caca,0xe8e8eaea,0xcacac0c0,0xcacae0e0,0xcacac2c2,0xcacae2e2,0xcacac8c8,0xcacae8e8,0xcacacaca,0xcacaeaea,0xeaeac0c0,0xeaeae0e0,0xeaeac2c2,0xeaeae2e2,0xeaeac8c8,0xeaeae8e8,0xeaeacaca,0xeaeaeaea,0xc0c0c0c0,0xc0c0f0f0,0xc0c0c3c3,0xc0c0f3f3,0xc0c0cccc,0xc0c0fcfc,0xc0c0cfcf,0xc0c0ffff,0xf0f0c0c0,0xf0f0f0f0,0xf0f0c3c3,0xf0f0f3f3,0xf0f0cccc,0xf0f0fcfc,0xf0f0cfcf,0xf0f0ffff,0xc3c3c0c0,0xc3c3f0f0,0xc3c3c3c3,0xc3c3f3f3,0xc3c3cccc,0xc3c3fcfc,0xc3c3cfcf,0xc3c3ffff,0xf3f3c0c0,0xf3f3f0f0,0xf3f3c3c3,0xf3f3f3f3,0xf3f3cccc,0xf3f3fcfc,0xf3f3cfcf,0xf3f3ffff,0xccccc0c0,0xccccf0f0,0xccccc3c3,0xccccf3f3,0xcccccccc,0xccccfcfc,0xcccccfcf,0xccccffff,0xfcfcc0c0,0xfcfcf0f0,0xfcfcc3c3,0xfcfcf3f3,0xfcfccccc,0xfcfcfcfc,0xfcfccfcf,0xfcfcffff,0xcfcfc0c0,0xcfcff0f0,0xcfcfc3c3,0xcfcff3f3,0xcfcfcccc,0xcfcffcfc,0xcfcfcfcf,0xcfcfffff,0xffffc0c0,0xfffff0f0,0xffffc3c3,0xfffff3f3,0xffffcccc,0xfffffcfc,0xffffcfcf,0xffffffff,0xc0c0c0c0,0xc0c0e0e0,0xc0c0c2c2,0xc0c0e2e2,0xc0c0c8c8,0xc0c0e8e8,0xc0c0caca,0xc0c0eaea,0xe0e0c0c0,0xe0e0e0e0,0xe0e0c2c2,0xe0e0e2e2,0xe0e0c8c8,0xe0e0e8e8,0xe0e0caca,0xe0e0eaea,0xc2c2c0c0,0xc2c2e0e0,0xc2c2c2c2,0xc2c2e2e2,0xc2c2c8c8,0xc2c2e8e8,0xc2c2caca,0xc2c2eaea,0xe2e2c0c0,0xe2e2e0e0,0xe2e2c2c2,0xe2e2e2e2,0xe2e2c8c8,0xe2e2e8e8,0xe2e2caca,0xe2e2eaea,0xc8c8c0c0,0xc8c8e0e0,0xc8c8c2c2,0xc8c8e2e2,0xc8c8c8c8,0xc8c8e8e8,0xc8c8caca,0xc8c8eaea,0xe8e8c0c0,0xe8e8e0e0,0xe8e8c2c2,0xe8e8e2e2,0xe8e8c8c8,0xe8e8e8e8,0xe8e8caca,0xe8e8eaea,0xcacac0c0,0xcacae0e0,0xcacac2c2,0xcacae2e2,0xcacac8c8,0xcacae8e8,0xcacacaca,0xcacaeaea,0xeaeac0c0,0xeaeae0e0,0xeaeac2c2,0xeaeae2e2,0xeaeac8c8,0xeaeae8e8,0xeaeacaca,0xeaeaeaea,0xc0c0c0c0,0xc0c0f0f0,0xc0c0c3c3,0xc0c0f3f3,0xc0c0cccc,0xc0c0fcfc,0xc0c0cfcf,0xc0c0ffff,0xf0f0c0c0,0xf0f0f0f0,0xf0f0c3c3,0xf0f0f3f3,0xf0f0cccc,0xf0f0fcfc,0xf0f0cfcf,0xf0f0ffff,0xc3c3c0c0,0xc3c3f0f0,0xc3c3c3c3,0xc3c3f3f3,0xc3c3cccc,0xc3c3fcfc,0xc3c3cfcf,0xc3c3ffff,0xf3f3c0c0,0xf3f3f0f0,0xf3f3c3c3,0xf3f3f3f3,0xf3f3cccc,0xf3f3fcfc,0xf3f3cfcf,0xf3f3ffff,0xccccc0c0,0xccccf0f0,0xccccc3c3,0xccccf3f3,0xcccccccc,0xccccfcfc,0xcccccfcf,0xccccffff,0xfcfcc0c0,0xfcfcf0f0,0xfcfcc3c3,0xfcfcf3f3,0xfcfccccc,0xfcfcfcfc,0xfcfccfcf,0xfcfcffff,0xcfcfc0c0,0xcfcff0f0,0xcfcfc3c3,0xcfcff3f3,0xcfcfcccc,0xcfcffcfc,0xcfcfcfcf,0xcfcfffff,0xffffc0c0,0xfffff0f0,0xffffc3c3,0xfffff3f3,0xffffcccc,0xfffffcfc,0xffffcfcf,0xffffffff,
// 0xc0c0c0c0,0xe0c0c0c0,0xc2c0c0c0,0xe2c0c0c0,0xc8c0c0c0,0xe8c0c0c0,0xcac0c0c0,0xeac0c0c0,0xc0e0e0e0,0xe0e0e0e0,0xc2e0e0e0,0xe2e0e0e0,0xc8e0e0e0,0xe8e0e0e0,0xcae0e0e0,0xeae0e0e0,0xc0c2c2c2,0xe0c2c2c2,0xc2c2c2c2,0xe2c2c2c2,0xc8c2c2c2,0xe8c2c2c2,0xcac2c2c2,0xeac2c2c2,0xc0e2e2e2,0xe0e2e2e2,0xc2e2e2e2,0xe2e2e2e2,0xc8e2e2e2,0xe8e2e2e2,0xcae2e2e2,0xeae2e2e2,0xc0c8c8c8,0xe0c8c8c8,0xc2c8c8c8,0xe2c8c8c8,0xc8c8c8c8,0xe8c8c8c8,0xcac8c8c8,0xeac8c8c8,0xc0e8e8e8,0xe0e8e8e8,0xc2e8e8e8,0xe2e8e8e8,0xc8e8e8e8,0xe8e8e8e8,0xcae8e8e8,0xeae8e8e8,0xc0cacaca,0xe0cacaca,0xc2cacaca,0xe2cacaca,0xc8cacaca,0xe8cacaca,0xcacacaca,0xeacacaca,0xc0eaeaea,0xe0eaeaea,0xc2eaeaea,0xe2eaeaea,0xc8eaeaea,0xe8eaeaea,0xcaeaeaea,0xeaeaeaea,0xc0c0c0c0,0xf0c0c0c0,0xc3c0c0c0,0xf3c0c0c0,0xccc0c0c0,0xfcc0c0c0,0xcfc0c0c0,0xffc0c0c0,0xc0f0f0f0,0xf0f0f0f0,0xc3f0f0f0,0xf3f0f0f0,0xccf0f0f0,0xfcf0f0f0,0xcff0f0f0,0xfff0f0f0,0xc0c3c3c3,0xf0c3c3c3,0xc3c3c3c3,0xf3c3c3c3,0xccc3c3c3,0xfcc3c3c3,0xcfc3c3c3,0xffc3c3c3,0xc0f3f3f3,0xf0f3f3f3,0xc3f3f3f3,0xf3f3f3f3,0xccf3f3f3,0xfcf3f3f3,0xcff3f3f3,0xfff3f3f3,0xc0cccccc,0xf0cccccc,0xc3cccccc,0xf3cccccc,0xcccccccc,0xfccccccc,0xcfcccccc,0xffcccccc,0xc0fcfcfc,0xf0fcfcfc,0xc3fcfcfc,0xf3fcfcfc,0xccfcfcfc,0xfcfcfcfc,0xcffcfcfc,0xfffcfcfc,0xc0cfcfcf,0xf0cfcfcf,0xc3cfcfcf,0xf3cfcfcf,0xcccfcfcf,0xfccfcfcf,0xcfcfcfcf,0xffcfcfcf,0xc0ffffff,0xf0ffffff,0xc3ffffff,0xf3ffffff,0xccffffff,0xfcffffff,0xcfffffff,0xffffffff,0xc0c0c0c0,0xe0c0c0c0,0xc2c0c0c0,0xe2c0c0c0,0xc8c0c0c0,0xe8c0c0c0,0xcac0c0c0,0xeac0c0c0,0xc0e0e0e0,0xe0e0e0e0,0xc2e0e0e0,0xe2e0e0e0,0xc8e0e0e0,0xe8e0e0e0,0xcae0e0e0,0xeae0e0e0,0xc0c2c2c2,0xe0c2c2c2,0xc2c2c2c2,0xe2c2c2c2,0xc8c2c2c2,0xe8c2c2c2,0xcac2c2c2,0xeac2c2c2,0xc0e2e2e2,0xe0e2e2e2,0xc2e2e2e2,0xe2e2e2e2,0xc8e2e2e2,0xe8e2e2e2,0xcae2e2e2,0xeae2e2e2,0xc0c8c8c8,0xe0c8c8c8,0xc2c8c8c8,0xe2c8c8c8,0xc8c8c8c8,0xe8c8c8c8,0xcac8c8c8,0xeac8c8c8,0xc0e8e8e8,0xe0e8e8e8,0xc2e8e8e8,0xe2e8e8e8,0xc8e8e8e8,0xe8e8e8e8,0xcae8e8e8,0xeae8e8e8,0xc0cacaca,0xe0cacaca,0xc2cacaca,0xe2cacaca,0xc8cacaca,0xe8cacaca,0xcacacaca,0xeacacaca,0xc0eaeaea,0xe0eaeaea,0xc2eaeaea,0xe2eaeaea,0xc8eaeaea,0xe8eaeaea,0xcaeaeaea,0xeaeaeaea,0xc0c0c0c0,0xf0c0c0c0,0xc3c0c0c0,0xf3c0c0c0,0xccc0c0c0,0xfcc0c0c0,0xcfc0c0c0,0xffc0c0c0,0xc0f0f0f0,0xf0f0f0f0,0xc3f0f0f0,0xf3f0f0f0,0xccf0f0f0,0xfcf0f0f0,0xcff0f0f0,0xfff0f0f0,0xc0c3c3c3,0xf0c3c3c3,0xc3c3c3c3,0xf3c3c3c3,0xccc3c3c3,0xfcc3c3c3,0xcfc3c3c3,0xffc3c3c3,0xc0f3f3f3,0xf0f3f3f3,0xc3f3f3f3,0xf3f3f3f3,0xccf3f3f3,0xfcf3f3f3,0xcff3f3f3,0xfff3f3f3,0xc0cccccc,0xf0cccccc,0xc3cccccc,0xf3cccccc,0xcccccccc,0xfccccccc,0xcfcccccc,0xffcccccc,0xc0fcfcfc,0xf0fcfcfc,0xc3fcfcfc,0xf3fcfcfc,0xccfcfcfc,0xfcfcfcfc,0xcffcfcfc,0xfffcfcfc,0xc0cfcfcf,0xf0cfcfcf,0xc3cfcfcf,0xf3cfcfcf,0xcccfcfcf,0xfccfcfcf,0xcfcfcfcf,0xffcfcfcf,0xc0ffffff,0xf0ffffff,0xc3ffffff,0xf3ffffff,0xccffffff,0xfcffffff,0xcfffffff,0xffffffff,
// 0xc0c0c0c0,0xe0c0e0c0,0xc2c0c2c0,0xe2c0e2c0,0xc8c0c8c0,0xe8c0e8c0,0xcac0cac0,0xeac0eac0,0xc0e0c0e0,0xe0e0e0e0,0xc2e0c2e0,0xe2e0e2e0,0xc8e0c8e0,0xe8e0e8e0,0xcae0cae0,0xeae0eae0,0xc0c2c0c2,0xe0c2e0c2,0xc2c2c2c2,0xe2c2e2c2,0xc8c2c8c2,0xe8c2e8c2,0xcac2cac2,0xeac2eac2,0xc0e2c0e2,0xe0e2e0e2,0xc2e2c2e2,0xe2e2e2e2,0xc8e2c8e2,0xe8e2e8e2,0xcae2cae2,0xeae2eae2,0xc0c8c0c8,0xe0c8e0c8,0xc2c8c2c8,0xe2c8e2c8,0xc8c8c8c8,0xe8c8e8c8,0xcac8cac8,0xeac8eac8,0xc0e8c0e8,0xe0e8e0e8,0xc2e8c2e8,0xe2e8e2e8,0xc8e8c8e8,0xe8e8e8e8,0xcae8cae8,0xeae8eae8,0xc0cac0ca,0xe0cae0ca,0xc2cac2ca,0xe2cae2ca,0xc8cac8ca,0xe8cae8ca,0xcacacaca,0xeacaeaca,0xc0eac0ea,0xe0eae0ea,0xc2eac2ea,0xe2eae2ea,0xc8eac8ea,0xe8eae8ea,0xcaeacaea,0xeaeaeaea,0xc0c0c0c0,0xf0c0f0c0,0xc3c0c3c0,0xf3c0f3c0,0xccc0ccc0,0xfcc0fcc0,0xcfc0cfc0,0xffc0ffc0,0xc0f0c0f0,0xf0f0f0f0,0xc3f0c3f0,0xf3f0f3f0,0xccf0ccf0,0xfcf0fcf0,0xcff0cff0,0xfff0fff0,0xc0c3c0c3,0xf0c3f0c3,0xc3c3c3c3,0xf3c3f3c3,0xccc3ccc3,0xfcc3fcc3,0xcfc3cfc3,0xffc3ffc3,0xc0f3c0f3,0xf0f3f0f3,0xc3f3c3f3,0xf3f3f3f3,0xccf3ccf3,0xfcf3fcf3,0xcff3cff3,0xfff3fff3,0xc0ccc0cc,0xf0ccf0cc,0xc3ccc3cc,0xf3ccf3cc,0xcccccccc,0xfcccfccc,0xcfcccfcc,0xffccffcc,0xc0fcc0fc,0xf0fcf0fc,0xc3fcc3fc,0xf3fcf3fc,0xccfcccfc,0xfcfcfcfc,0xcffccffc,0xfffcfffc,0xc0cfc0cf,0xf0cff0cf,0xc3cfc3cf,0xf3cff3cf,0xcccfcccf,0xfccffccf,0xcfcfcfcf,0xffcfffcf,0xc0ffc0ff,0xf0fff0ff,0xc3ffc3ff,0xf3fff3ff,0xccffccff,0xfcfffcff,0xcfffcfff,0xffffffff,0xc0c0c0c0,0xe0c0e0c0,0xc2c0c2c0,0xe2c0e2c0,0xc8c0c8c0,0xe8c0e8c0,0xcac0cac0,0xeac0eac0,0xc0e0c0e0,0xe0e0e0e0,0xc2e0c2e0,0xe2e0e2e0,0xc8e0c8e0,0xe8e0e8e0,0xcae0cae0,0xeae0eae0,0xc0c2c0c2,0xe0c2e0c2,0xc2c2c2c2,0xe2c2e2c2,0xc8c2c8c2,0xe8c2e8c2,0xcac2cac2,0xeac2eac2,0xc0e2c0e2,0xe0e2e0e2,0xc2e2c2e2,0xe2e2e2e2,0xc8e2c8e2,0xe8e2e8e2,0xcae2cae2,0xeae2eae2,0xc0c8c0c8,0xe0c8e0c8,0xc2c8c2c8,0xe2c8e2c8,0xc8c8c8c8,0xe8c8e8c8,0xcac8cac8,0xeac8eac8,0xc0e8c0e8,0xe0e8e0e8,0xc2e8c2e8,0xe2e8e2e8,0xc8e8c8e8,0xe8e8e8e8,0xcae8cae8,0xeae8eae8,0xc0cac0ca,0xe0cae0ca,0xc2cac2ca,0xe2cae2ca,0xc8cac8ca,0xe8cae8ca,0xcacacaca,0xeacaeaca,0xc0eac0ea,0xe0eae0ea,0xc2eac2ea,0xe2eae2ea,0xc8eac8ea,0xe8eae8ea,0xcaeacaea,0xeaeaeaea,0xc0c0c0c0,0xf0c0f0c0,0xc3c0c3c0,0xf3c0f3c0,0xccc0ccc0,0xfcc0fcc0,0xcfc0cfc0,0xffc0ffc0,0xc0f0c0f0,0xf0f0f0f0,0xc3f0c3f0,0xf3f0f3f0,0xccf0ccf0,0xfcf0fcf0,0xcff0cff0,0xfff0fff0,0xc0c3c0c3,0xf0c3f0c3,0xc3c3c3c3,0xf3c3f3c3,0xccc3ccc3,0xfcc3fcc3,0xcfc3cfc3,0xffc3ffc3,0xc0f3c0f3,0xf0f3f0f3,0xc3f3c3f3,0xf3f3f3f3,0xccf3ccf3,0xfcf3fcf3,0xcff3cff3,0xfff3fff3,0xc0ccc0cc,0xf0ccf0cc,0xc3ccc3cc,0xf3ccf3cc,0xcccccccc,0xfcccfccc,0xcfcccfcc,0xffccffcc,0xc0fcc0fc,0xf0fcf0fc,0xc3fcc3fc,0xf3fcf3fc,0xccfcccfc,0xfcfcfcfc,0xcffccffc,0xfffcfffc,0xc0cfc0cf,0xf0cff0cf,0xc3cfc3cf,0xf3cff3cf,0xcccfcccf,0xfccffccf,0xcfcfcfcf,0xffcfffcf,0xc0ffc0ff,0xf0fff0ff,0xc3ffc3ff,0xf3fff3ff,0xccffccff,0xfcfffcff,0xcfffcfff,0xffffffff,
// 0xc0c0c0c0,0xe0c0c0e0,0xc2c0c0c2,0xe2c0c0e2,0xc8c0c0c8,0xe8c0c0e8,0xcac0c0ca,0xeac0c0ea,0xc0e0e0c0,0xe0e0e0e0,0xc2e0e0c2,0xe2e0e0e2,0xc8e0e0c8,0xe8e0e0e8,0xcae0e0ca,0xeae0e0ea,0xc0c2c2c0,0xe0c2c2e0,0xc2c2c2c2,0xe2c2c2e2,0xc8c2c2c8,0xe8c2c2e8,0xcac2c2ca,0xeac2c2ea,0xc0e2e2c0,0xe0e2e2e0,0xc2e2e2c2,0xe2e2e2e2,0xc8e2e2c8,0xe8e2e2e8,0xcae2e2ca,0xeae2e2ea,0xc0c8c8c0,0xe0c8c8e0,0xc2c8c8c2,0xe2c8c8e2,0xc8c8c8c8,0xe8c8c8e8,0xcac8c8ca,0xeac8c8ea,0xc0e8e8c0,0xe0e8e8e0,0xc2e8e8c2,0xe2e8e8e2,0xc8e8e8c8,0xe8e8e8e8,0xcae8e8ca,0xeae8e8ea,0xc0cacac0,0xe0cacae0,0xc2cacac2,0xe2cacae2,0xc8cacac8,0xe8cacae8,0xcacacaca,0xeacacaea,0xc0eaeac0,0xe0eaeae0,0xc2eaeac2,0xe2eaeae2,0xc8eaeac8,0xe8eaeae8,0xcaeaeaca,0xeaeaeaea,0xc0c0c0c0,0xf0c0c0f0,0xc3c0c0c3,0xf3c0c0f3,0xccc0c0cc,0xfcc0c0fc,0xcfc0c0cf,0xffc0c0ff,0xc0f0f0c0,0xf0f0f0f0,0xc3f0f0c3,0xf3f0f0f3,0xccf0f0cc,0xfcf0f0fc,0xcff0f0cf,0xfff0f0ff,0xc0c3c3c0,0xf0c3c3f0,0xc3c3c3c3,0xf3c3c3f3,0xccc3c3cc,0xfcc3c3fc,0xcfc3c3cf,0xffc3c3ff,0xc0f3f3c0,0xf0f3f3f0,0xc3f3f3c3,0xf3f3f3f3,0xccf3f3cc,0xfcf3f3fc,0xcff3f3cf,0xfff3f3ff,0xc0ccccc0,0xf0ccccf0,0xc3ccccc3,0xf3ccccf3,0xcccccccc,0xfcccccfc,0xcfcccccf,0xffccccff,0xc0fcfcc0,0xf0fcfcf0,0xc3fcfcc3,0xf3fcfcf3,0xccfcfccc,0xfcfcfcfc,0xcffcfccf,0xfffcfcff,0xc0cfcfc0,0xf0cfcff0,0xc3cfcfc3,0xf3cfcff3,0xcccfcfcc,0xfccfcffc,0xcfcfcfcf,0xffcfcfff,0xc0ffffc0,0xf0fffff0,0xc3ffffc3,0xf3fffff3,0xccffffcc,0xfcfffffc,0xcfffffcf,0xffffffff,0xc0c0c0c0,0xe0c0c0e0,0xc2c0c0c2,0xe2c0c0e2,0xc8c0c0c8,0xe8c0c0e8,0xcac0c0ca,0xeac0c0ea,0xc0e0e0c0,0xe0e0e0e0,0xc2e0e0c2,0xe2e0e0e2,0xc8e0e0c8,0xe8e0e0e8,0xcae0e0ca,0xeae0e0ea,0xc0c2c2c0,0xe0c2c2e0,0xc2c2c2c2,0xe2c2c2e2,0xc8c2c2c8,0xe8c2c2e8,0xcac2c2ca,0xeac2c2ea,0xc0e2e2c0,0xe0e2e2e0,0xc2e2e2c2,0xe2e2e2e2,0xc8e2e2c8,0xe8e2e2e8,0xcae2e2ca,0xeae2e2ea,0xc0c8c8c0,0xe0c8c8e0,0xc2c8c8c2,0xe2c8c8e2,0xc8c8c8c8,0xe8c8c8e8,0xcac8c8ca,0xeac8c8ea,0xc0e8e8c0,0xe0e8e8e0,0xc2e8e8c2,0xe2e8e8e2,0xc8e8e8c8,0xe8e8e8e8,0xcae8e8ca,0xeae8e8ea,0xc0cacac0,0xe0cacae0,0xc2cacac2,0xe2cacae2,0xc8cacac8,0xe8cacae8,0xcacacaca,0xeacacaea,0xc0eaeac0,0xe0eaeae0,0xc2eaeac2,0xe2eaeae2,0xc8eaeac8,0xe8eaeae8,0xcaeaeaca,0xeaeaeaea,0xc0c0c0c0,0xf0c0c0f0,0xc3c0c0c3,0xf3c0c0f3,0xccc0c0cc,0xfcc0c0fc,0xcfc0c0cf,0xffc0c0ff,0xc0f0f0c0,0xf0f0f0f0,0xc3f0f0c3,0xf3f0f0f3,0xccf0f0cc,0xfcf0f0fc,0xcff0f0cf,0xfff0f0ff,0xc0c3c3c0,0xf0c3c3f0,0xc3c3c3c3,0xf3c3c3f3,0xccc3c3cc,0xfcc3c3fc,0xcfc3c3cf,0xffc3c3ff,0xc0f3f3c0,0xf0f3f3f0,0xc3f3f3c3,0xf3f3f3f3,0xccf3f3cc,0xfcf3f3fc,0xcff3f3cf,0xfff3f3ff,0xc0ccccc0,0xf0ccccf0,0xc3ccccc3,0xf3ccccf3,0xcccccccc,0xfcccccfc,0xcfcccccf,0xffccccff,0xc0fcfcc0,0xf0fcfcf0,0xc3fcfcc3,0xf3fcfcf3,0xccfcfccc,0xfcfcfcfc,0xcffcfccf,0xfffcfcff,0xc0cfcfc0,0xf0cfcff0,0xc3cfcfc3,0xf3cfcff3,0xcccfcfcc,0xfccfcffc,0xcfcfcfcf,0xffcfcfff,0xc0ffffc0,0xf0fffff0,0xc3ffffc3,0xf3fffff3,0xccffffcc,0xfcfffffc,0xcfffffcf,0xffffffff,
// 0xc0c0c0c0,0xe0c0e0e0,0xc2c0c2c2,0xe2c0e2e2,0xc8c0c8c8,0xe8c0e8e8,0xcac0caca,0xeac0eaea,0xc0e0c0c0,0xe0e0e0e0,0xc2e0c2c2,0xe2e0e2e2,0xc8e0c8c8,0xe8e0e8e8,0xcae0caca,0xeae0eaea,0xc0c2c0c0,0xe0c2e0e0,0xc2c2c2c2,0xe2c2e2e2,0xc8c2c8c8,0xe8c2e8e8,0xcac2caca,0xeac2eaea,0xc0e2c0c0,0xe0e2e0e0,0xc2e2c2c2,0xe2e2e2e2,0xc8e2c8c8,0xe8e2e8e8,0xcae2caca,0xeae2eaea,0xc0c8c0c0,0xe0c8e0e0,0xc2c8c2c2,0xe2c8e2e2,0xc8c8c8c8,0xe8c8e8e8,0xcac8caca,0xeac8eaea,0xc0e8c0c0,0xe0e8e0e0,0xc2e8c2c2,0xe2e8e2e2,0xc8e8c8c8,0xe8e8e8e8,0xcae8caca,0xeae8eaea,0xc0cac0c0,0xe0cae0e0,0xc2cac2c2,0xe2cae2e2,0xc8cac8c8,0xe8cae8e8,0xcacacaca,0xeacaeaea,0xc0eac0c0,0xe0eae0e0,0xc2eac2c2,0xe2eae2e2,0xc8eac8c8,0xe8eae8e8,0xcaeacaca,0xeaeaeaea,0xc0c0c0c0,0xf0c0f0f0,0xc3c0c3c3,0xf3c0f3f3,0xccc0cccc,0xfcc0fcfc,0xcfc0cfcf,0xffc0ffff,0xc0f0c0c0,0xf0f0f0f0,0xc3f0c3c3,0xf3f0f3f3,0xccf0cccc,0xfcf0fcfc,0xcff0cfcf,0xfff0ffff,0xc0c3c0c0,0xf0c3f0f0,0xc3c3c3c3,0xf3c3f3f3,0xccc3cccc,0xfcc3fcfc,0xcfc3cfcf,0xffc3ffff,0xc0f3c0c0,0xf0f3f0f0,0xc3f3c3c3,0xf3f3f3f3,0xccf3cccc,0xfcf3fcfc,0xcff3cfcf,0xfff3ffff,0xc0ccc0c0,0xf0ccf0f0,0xc3ccc3c3,0xf3ccf3f3,0xcccccccc,0xfcccfcfc,0xcfcccfcf,0xffccffff,0xc0fcc0c0,0xf0fcf0f0,0xc3fcc3c3,0xf3fcf3f3,0xccfccccc,0xfcfcfcfc,0xcffccfcf,0xfffcffff,0xc0cfc0c0,0xf0cff0f0,0xc3cfc3c3,0xf3cff3f3,0xcccfcccc,0xfccffcfc,0xcfcfcfcf,0xffcfffff,0xc0ffc0c0,0xf0fff0f0,0xc3ffc3c3,0xf3fff3f3,0xccffcccc,0xfcfffcfc,0xcfffcfcf,0xffffffff,0xc0c0c0c0,0xe0c0e0e0,0xc2c0c2c2,0xe2c0e2e2,0xc8c0c8c8,0xe8c0e8e8,0xcac0caca,0xeac0eaea,0xc0e0c0c0,0xe0e0e0e0,0xc2e0c2c2,0xe2e0e2e2,0xc8e0c8c8,0xe8e0e8e8,0xcae0caca,0xeae0eaea,0xc0c2c0c0,0xe0c2e0e0,0xc2c2c2c2,0xe2c2e2e2,0xc8c2c8c8,0xe8c2e8e8,0xcac2caca,0xeac2eaea,0xc0e2c0c0,0xe0e2e0e0,0xc2e2c2c2,0xe2e2e2e2,0xc8e2c8c8,0xe8e2e8e8,0xcae2caca,0xeae2eaea,0xc0c8c0c0,0xe0c8e0e0,0xc2c8c2c2,0xe2c8e2e2,0xc8c8c8c8,0xe8c8e8e8,0xcac8caca,0xeac8eaea,0xc0e8c0c0,0xe0e8e0e0,0xc2e8c2c2,0xe2e8e2e2,0xc8e8c8c8,0xe8e8e8e8,0xcae8caca,0xeae8eaea,0xc0cac0c0,0xe0cae0e0,0xc2cac2c2,0xe2cae2e2,0xc8cac8c8,0xe8cae8e8,0xcacacaca,0xeacaeaea,0xc0eac0c0,0xe0eae0e0,0xc2eac2c2,0xe2eae2e2,0xc8eac8c8,0xe8eae8e8,0xcaeacaca,0xeaeaeaea,0xc0c0c0c0,0xf0c0f0f0,0xc3c0c3c3,0xf3c0f3f3,0xccc0cccc,0xfcc0fcfc,0xcfc0cfcf,0xffc0ffff,0xc0f0c0c0,0xf0f0f0f0,0xc3f0c3c3,0xf3f0f3f3,0xccf0cccc,0xfcf0fcfc,0xcff0cfcf,0xfff0ffff,0xc0c3c0c0,0xf0c3f0f0,0xc3c3c3c3,0xf3c3f3f3,0xccc3cccc,0xfcc3fcfc,0xcfc3cfcf,0xffc3ffff,0xc0f3c0c0,0xf0f3f0f0,0xc3f3c3c3,0xf3f3f3f3,0xccf3cccc,0xfcf3fcfc,0xcff3cfcf,0xfff3ffff,0xc0ccc0c0,0xf0ccf0f0,0xc3ccc3c3,0xf3ccf3f3,0xcccccccc,0xfcccfcfc,0xcfcccfcf,0xffccffff,0xc0fcc0c0,0xf0fcf0f0,0xc3fcc3c3,0xf3fcf3f3,0xccfccccc,0xfcfcfcfc,0xcffccfcf,0xfffcffff,0xc0cfc0c0,0xf0cff0f0,0xc3cfc3c3,0xf3cff3f3,0xcccfcccc,0xfccffcfc,0xcfcfcfcf,0xffcfffff,0xc0ffc0c0,0xf0fff0f0,0xc3ffc3c3,0xf3fff3f3,0xccffcccc,0xfcfffcfc,0xcfffcfcf,0xffffffff,
// 0xc0c0c0c0,0xc0e0c0c0,0xc0c2c0c0,0xc0e2c0c0,0xc0c8c0c0,0xc0e8c0c0,0xc0cac0c0,0xc0eac0c0,0xe0c0e0e0,0xe0e0e0e0,0xe0c2e0e0,0xe0e2e0e0,0xe0c8e0e0,0xe0e8e0e0,0xe0cae0e0,0xe0eae0e0,0xc2c0c2c2,0xc2e0c2c2,0xc2c2c2c2,0xc2e2c2c2,0xc2c8c2c2,0xc2e8c2c2,0xc2cac2c2,0xc2eac2c2,0xe2c0e2e2,0xe2e0e2e2,0xe2c2e2e2,0xe2e2e2e2,0xe2c8e2e2,0xe2e8e2e2,0xe2cae2e2,0xe2eae2e2,0xc8c0c8c8,0xc8e0c8c8,0xc8c2c8c8,0xc8e2c8c8,0xc8c8c8c8,0xc8e8c8c8,0xc8cac8c8,0xc8eac8c8,0xe8c0e8e8,0xe8e0e8e8,0xe8c2e8e8,0xe8e2e8e8,0xe8c8e8e8,0xe8e8e8e8,0xe8cae8e8,0xe8eae8e8,0xcac0caca,0xcae0caca,0xcac2caca,0xcae2caca,0xcac8caca,0xcae8caca,0xcacacaca,0xcaeacaca,0xeac0eaea,0xeae0eaea,0xeac2eaea,0xeae2eaea,0xeac8eaea,0xeae8eaea,0xeacaeaea,0xeaeaeaea,0xc0c0c0c0,0xc0f0c0c0,0xc0c3c0c0,0xc0f3c0c0,0xc0ccc0c0,0xc0fcc0c0,0xc0cfc0c0,0xc0ffc0c0,0xf0c0f0f0,0xf0f0f0f0,0xf0c3f0f0,0xf0f3f0f0,0xf0ccf0f0,0xf0fcf0f0,0xf0cff0f0,0xf0fff0f0,0xc3c0c3c3,0xc3f0c3c3,0xc3c3c3c3,0xc3f3c3c3,0xc3ccc3c3,0xc3fcc3c3,0xc3cfc3c3,0xc3ffc3c3,0xf3c0f3f3,0xf3f0f3f3,0xf3c3f3f3,0xf3f3f3f3,0xf3ccf3f3,0xf3fcf3f3,0xf3cff3f3,0xf3fff3f3,0xccc0cccc,0xccf0cccc,0xccc3cccc,0xccf3cccc,0xcccccccc,0xccfccccc,0xcccfcccc,0xccffcccc,0xfcc0fcfc,0xfcf0fcfc,0xfcc3fcfc,0xfcf3fcfc,0xfcccfcfc,0xfcfcfcfc,0xfccffcfc,0xfcfffcfc,0xcfc0cfcf,0xcff0cfcf,0xcfc3cfcf,0xcff3cfcf,0xcfcccfcf,0xcffccfcf,0xcfcfcfcf,0xcfffcfcf,0xffc0ffff,0xfff0ffff,0xffc3ffff,0xfff3ffff,0xffccffff,0xfffcffff,0xffcfffff,0xffffffff,0xc0c0c0c0,0xc0e0c0c0,0xc0c2c0c0,0xc0e2c0c0,0xc0c8c0c0,0xc0e8c0c0,0xc0cac0c0,0xc0eac0c0,0xe0c0e0e0,0xe0e0e0e0,0xe0c2e0e0,0xe0e2e0e0,0xe0c8e0e0,0xe0e8e0e0,0xe0cae0e0,0xe0eae0e0,0xc2c0c2c2,0xc2e0c2c2,0xc2c2c2c2,0xc2e2c2c2,0xc2c8c2c2,0xc2e8c2c2,0xc2cac2c2,0xc2eac2c2,0xe2c0e2e2,0xe2e0e2e2,0xe2c2e2e2,0xe2e2e2e2,0xe2c8e2e2,0xe2e8e2e2,0xe2cae2e2,0xe2eae2e2,0xc8c0c8c8,0xc8e0c8c8,0xc8c2c8c8,0xc8e2c8c8,0xc8c8c8c8,0xc8e8c8c8,0xc8cac8c8,0xc8eac8c8,0xe8c0e8e8,0xe8e0e8e8,0xe8c2e8e8,0xe8e2e8e8,0xe8c8e8e8,0xe8e8e8e8,0xe8cae8e8,0xe8eae8e8,0xcac0caca,0xcae0caca,0xcac2caca,0xcae2caca,0xcac8caca,0xcae8caca,0xcacacaca,0xcaeacaca,0xeac0eaea,0xeae0eaea,0xeac2eaea,0xeae2eaea,0xeac8eaea,0xeae8eaea,0xeacaeaea,0xeaeaeaea,0xc0c0c0c0,0xc0f0c0c0,0xc0c3c0c0,0xc0f3c0c0,0xc0ccc0c0,0xc0fcc0c0,0xc0cfc0c0,0xc0ffc0c0,0xf0c0f0f0,0xf0f0f0f0,0xf0c3f0f0,0xf0f3f0f0,0xf0ccf0f0,0xf0fcf0f0,0xf0cff0f0,0xf0fff0f0,0xc3c0c3c3,0xc3f0c3c3,0xc3c3c3c3,0xc3f3c3c3,0xc3ccc3c3,0xc3fcc3c3,0xc3cfc3c3,0xc3ffc3c3,0xf3c0f3f3,0xf3f0f3f3,0xf3c3f3f3,0xf3f3f3f3,0xf3ccf3f3,0xf3fcf3f3,0xf3cff3f3,0xf3fff3f3,0xccc0cccc,0xccf0cccc,0xccc3cccc,0xccf3cccc,0xcccccccc,0xccfccccc,0xcccfcccc,0xccffcccc,0xfcc0fcfc,0xfcf0fcfc,0xfcc3fcfc,0xfcf3fcfc,0xfcccfcfc,0xfcfcfcfc,0xfccffcfc,0xfcfffcfc,0xcfc0cfcf,0xcff0cfcf,0xcfc3cfcf,0xcff3cfcf,0xcfcccfcf,0xcffccfcf,0xcfcfcfcf,0xcfffcfcf,0xffc0ffff,0xfff0ffff,0xffc3ffff,0xfff3ffff,0xffccffff,0xfffcffff,0xffcfffff,0xffffffff,
// 0xc0c0c0c0,0xc0e0e0c0,0xc0c2c2c0,0xc0e2e2c0,0xc0c8c8c0,0xc0e8e8c0,0xc0cacac0,0xc0eaeac0,0xe0c0c0e0,0xe0e0e0e0,0xe0c2c2e0,0xe0e2e2e0,0xe0c8c8e0,0xe0e8e8e0,0xe0cacae0,0xe0eaeae0,0xc2c0c0c2,0xc2e0e0c2,0xc2c2c2c2,0xc2e2e2c2,0xc2c8c8c2,0xc2e8e8c2,0xc2cacac2,0xc2eaeac2,0xe2c0c0e2,0xe2e0e0e2,0xe2c2c2e2,0xe2e2e2e2,0xe2c8c8e2,0xe2e8e8e2,0xe2cacae2,0xe2eaeae2,0xc8c0c0c8,0xc8e0e0c8,0xc8c2c2c8,0xc8e2e2c8,0xc8c8c8c8,0xc8e8e8c8,0xc8cacac8,0xc8eaeac8,0xe8c0c0e8,0xe8e0e0e8,0xe8c2c2e8,0xe8e2e2e8,0xe8c8c8e8,0xe8e8e8e8,0xe8cacae8,0xe8eaeae8,0xcac0c0ca,0xcae0e0ca,0xcac2c2ca,0xcae2e2ca,0xcac8c8ca,0xcae8e8ca,0xcacacaca,0xcaeaeaca,0xeac0c0ea,0xeae0e0ea,0xeac2c2ea,0xeae2e2ea,0xeac8c8ea,0xeae8e8ea,0xeacacaea,0xeaeaeaea,0xc0c0c0c0,0xc0f0f0c0,0xc0c3c3c0,0xc0f3f3c0,0xc0ccccc0,0xc0fcfcc0,0xc0cfcfc0,0xc0ffffc0,0xf0c0c0f0,0xf0f0f0f0,0xf0c3c3f0,0xf0f3f3f0,0xf0ccccf0,0xf0fcfcf0,0xf0cfcff0,0xf0fffff0,0xc3c0c0c3,0xc3f0f0c3,0xc3c3c3c3,0xc3f3f3c3,0xc3ccccc3,0xc3fcfcc3,0xc3cfcfc3,0xc3ffffc3,0xf3c0c0f3,0xf3f0f0f3,0xf3c3c3f3,0xf3f3f3f3,0xf3ccccf3,0xf3fcfcf3,0xf3cfcff3,0xf3fffff3,0xccc0c0cc,0xccf0f0cc,0xccc3c3cc,0xccf3f3cc,0xcccccccc,0xccfcfccc,0xcccfcfcc,0xccffffcc,0xfcc0c0fc,0xfcf0f0fc,0xfcc3c3fc,0xfcf3f3fc,0xfcccccfc,0xfcfcfcfc,0xfccfcffc,0xfcfffffc,0xcfc0c0cf,0xcff0f0cf,0xcfc3c3cf,0xcff3f3cf,0xcfcccccf,0xcffcfccf,0xcfcfcfcf,0xcfffffcf,0xffc0c0ff,0xfff0f0ff,0xffc3c3ff,0xfff3f3ff,0xffccccff,0xfffcfcff,0xffcfcfff,0xffffffff,0xc0c0c0c0,0xc0e0e0c0,0xc0c2c2c0,0xc0e2e2c0,0xc0c8c8c0,0xc0e8e8c0,0xc0cacac0,0xc0eaeac0,0xe0c0c0e0,0xe0e0e0e0,0xe0c2c2e0,0xe0e2e2e0,0xe0c8c8e0,0xe0e8e8e0,0xe0cacae0,0xe0eaeae0,0xc2c0c0c2,0xc2e0e0c2,0xc2c2c2c2,0xc2e2e2c2,0xc2c8c8c2,0xc2e8e8c2,0xc2cacac2,0xc2eaeac2,0xe2c0c0e2,0xe2e0e0e2,0xe2c2c2e2,0xe2e2e2e2,0xe2c8c8e2,0xe2e8e8e2,0xe2cacae2,0xe2eaeae2,0xc8c0c0c8,0xc8e0e0c8,0xc8c2c2c8,0xc8e2e2c8,0xc8c8c8c8,0xc8e8e8c8,0xc8cacac8,0xc8eaeac8,0xe8c0c0e8,0xe8e0e0e8,0xe8c2c2e8,0xe8e2e2e8,0xe8c8c8e8,0xe8e8e8e8,0xe8cacae8,0xe8eaeae8,0xcac0c0ca,0xcae0e0ca,0xcac2c2ca,0xcae2e2ca,0xcac8c8ca,0xcae8e8ca,0xcacacaca,0xcaeaeaca,0xeac0c0ea,0xeae0e0ea,0xeac2c2ea,0xeae2e2ea,0xeac8c8ea,0xeae8e8ea,0xeacacaea,0xeaeaeaea,0xc0c0c0c0,0xc0f0f0c0,0xc0c3c3c0,0xc0f3f3c0,0xc0ccccc0,0xc0fcfcc0,0xc0cfcfc0,0xc0ffffc0,0xf0c0c0f0,0xf0f0f0f0,0xf0c3c3f0,0xf0f3f3f0,0xf0ccccf0,0xf0fcfcf0,0xf0cfcff0,0xf0fffff0,0xc3c0c0c3,0xc3f0f0c3,0xc3c3c3c3,0xc3f3f3c3,0xc3ccccc3,0xc3fcfcc3,0xc3cfcfc3,0xc3ffffc3,0xf3c0c0f3,0xf3f0f0f3,0xf3c3c3f3,0xf3f3f3f3,0xf3ccccf3,0xf3fcfcf3,0xf3cfcff3,0xf3fffff3,0xccc0c0cc,0xccf0f0cc,0xccc3c3cc,0xccf3f3cc,0xcccccccc,0xccfcfccc,0xcccfcfcc,0xccffffcc,0xfcc0c0fc,0xfcf0f0fc,0xfcc3c3fc,0xfcf3f3fc,0xfcccccfc,0xfcfcfcfc,0xfccfcffc,0xfcfffffc,0xcfc0c0cf,0xcff0f0cf,0xcfc3c3cf,0xcff3f3cf,0xcfcccccf,0xcffcfccf,0xcfcfcfcf,0xcfffffcf,0xffc0c0ff,0xfff0f0ff,0xffc3c3ff,0xfff3f3ff,0xffccccff,0xfffcfcff,0xffcfcfff,0xffffffff,
// 0xc0c0c0c0,0xc0e0c0e0,0xc0c2c0c2,0xc0e2c0e2,0xc0c8c0c8,0xc0e8c0e8,0xc0cac0ca,0xc0eac0ea,0xe0c0e0c0,0xe0e0e0e0,0xe0c2e0c2,0xe0e2e0e2,0xe0c8e0c8,0xe0e8e0e8,0xe0cae0ca,0xe0eae0ea,0xc2c0c2c0,0xc2e0c2e0,0xc2c2c2c2,0xc2e2c2e2,0xc2c8c2c8,0xc2e8c2e8,0xc2cac2ca,0xc2eac2ea,0xe2c0e2c0,0xe2e0e2e0,0xe2c2e2c2,0xe2e2e2e2,0xe2c8e2c8,0xe2e8e2e8,0xe2cae2ca,0xe2eae2ea,0xc8c0c8c0,0xc8e0c8e0,0xc8c2c8c2,0xc8e2c8e2,0xc8c8c8c8,0xc8e8c8e8,0xc8cac8ca,0xc8eac8ea,0xe8c0e8c0,0xe8e0e8e0,0xe8c2e8c2,0xe8e2e8e2,0xe8c8e8c8,0xe8e8e8e8,0xe8cae8ca,0xe8eae8ea,0xcac0cac0,0xcae0cae0,0xcac2cac2,0xcae2cae2,0xcac8cac8,0xcae8cae8,0xcacacaca,0xcaeacaea,0xeac0eac0,0xeae0eae0,0xeac2eac2,0xeae2eae2,0xeac8eac8,0xeae8eae8,0xeacaeaca,0xeaeaeaea,0xc0c0c0c0,0xc0f0c0f0,0xc0c3c0c3,0xc0f3c0f3,0xc0ccc0cc,0xc0fcc0fc,0xc0cfc0cf,0xc0ffc0ff,0xf0c0f0c0,0xf0f0f0f0,0xf0c3f0c3,0xf0f3f0f3,0xf0ccf0cc,0xf0fcf0fc,0xf0cff0cf,0xf0fff0ff,0xc3c0c3c0,0xc3f0c3f0,0xc3c3c3c3,0xc3f3c3f3,0xc3ccc3cc,0xc3fcc3fc,0xc3cfc3cf,0xc3ffc3ff,0xf3c0f3c0,0xf3f0f3f0,0xf3c3f3c3,0xf3f3f3f3,0xf3ccf3cc,0xf3fcf3fc,0xf3cff3cf,0xf3fff3ff,0xccc0ccc0,0xccf0ccf0,0xccc3ccc3,0xccf3ccf3,0xcccccccc,0xccfcccfc,0xcccfcccf,0xccffccff,0xfcc0fcc0,0xfcf0fcf0,0xfcc3fcc3,0xfcf3fcf3,0xfcccfccc,0xfcfcfcfc,0xfccffccf,0xfcfffcff,0xcfc0cfc0,0xcff0cff0,0xcfc3cfc3,0xcff3cff3,0xcfcccfcc,0xcffccffc,0xcfcfcfcf,0xcfffcfff,0xffc0ffc0,0xfff0fff0,0xffc3ffc3,0xfff3fff3,0xffccffcc,0xfffcfffc,0xffcfffcf,0xffffffff,0xc0c0c0c0,0xc0e0c0e0,0xc0c2c0c2,0xc0e2c0e2,0xc0c8c0c8,0xc0e8c0e8,0xc0cac0ca,0xc0eac0ea,0xe0c0e0c0,0xe0e0e0e0,0xe0c2e0c2,0xe0e2e0e2,0xe0c8e0c8,0xe0e8e0e8,0xe0cae0ca,0xe0eae0ea,0xc2c0c2c0,0xc2e0c2e0,0xc2c2c2c2,0xc2e2c2e2,0xc2c8c2c8,0xc2e8c2e8,0xc2cac2ca,0xc2eac2ea,0xe2c0e2c0,0xe2e0e2e0,0xe2c2e2c2,0xe2e2e2e2,0xe2c8e2c8,0xe2e8e2e8,0xe2cae2ca,0xe2eae2ea,0xc8c0c8c0,0xc8e0c8e0,0xc8c2c8c2,0xc8e2c8e2,0xc8c8c8c8,0xc8e8c8e8,0xc8cac8ca,0xc8eac8ea,0xe8c0e8c0,0xe8e0e8e0,0xe8c2e8c2,0xe8e2e8e2,0xe8c8e8c8,0xe8e8e8e8,0xe8cae8ca,0xe8eae8ea,0xcac0cac0,0xcae0cae0,0xcac2cac2,0xcae2cae2,0xcac8cac8,0xcae8cae8,0xcacacaca,0xcaeacaea,0xeac0eac0,0xeae0eae0,0xeac2eac2,0xeae2eae2,0xeac8eac8,0xeae8eae8,0xeacaeaca,0xeaeaeaea,0xc0c0c0c0,0xc0f0c0f0,0xc0c3c0c3,0xc0f3c0f3,0xc0ccc0cc,0xc0fcc0fc,0xc0cfc0cf,0xc0ffc0ff,0xf0c0f0c0,0xf0f0f0f0,0xf0c3f0c3,0xf0f3f0f3,0xf0ccf0cc,0xf0fcf0fc,0xf0cff0cf,0xf0fff0ff,0xc3c0c3c0,0xc3f0c3f0,0xc3c3c3c3,0xc3f3c3f3,0xc3ccc3cc,0xc3fcc3fc,0xc3cfc3cf,0xc3ffc3ff,0xf3c0f3c0,0xf3f0f3f0,0xf3c3f3c3,0xf3f3f3f3,0xf3ccf3cc,0xf3fcf3fc,0xf3cff3cf,0xf3fff3ff,0xccc0ccc0,0xccf0ccf0,0xccc3ccc3,0xccf3ccf3,0xcccccccc,0xccfcccfc,0xcccfcccf,0xccffccff,0xfcc0fcc0,0xfcf0fcf0,0xfcc3fcc3,0xfcf3fcf3,0xfcccfccc,0xfcfcfcfc,0xfccffccf,0xfcfffcff,0xcfc0cfc0,0xcff0cff0,0xcfc3cfc3,0xcff3cff3,0xcfcccfcc,0xcffccffc,0xcfcfcfcf,0xcfffcfff,0xffc0ffc0,0xfff0fff0,0xffc3ffc3,0xfff3fff3,0xffccffcc,0xfffcfffc,0xffcfffcf,0xffffffff,
// 0xc0c0c0c0,0xc0e0e0e0,0xc0c2c2c2,0xc0e2e2e2,0xc0c8c8c8,0xc0e8e8e8,0xc0cacaca,0xc0eaeaea,0xe0c0c0c0,0xe0e0e0e0,0xe0c2c2c2,0xe0e2e2e2,0xe0c8c8c8,0xe0e8e8e8,0xe0cacaca,0xe0eaeaea,0xc2c0c0c0,0xc2e0e0e0,0xc2c2c2c2,0xc2e2e2e2,0xc2c8c8c8,0xc2e8e8e8,0xc2cacaca,0xc2eaeaea,0xe2c0c0c0,0xe2e0e0e0,0xe2c2c2c2,0xe2e2e2e2,0xe2c8c8c8,0xe2e8e8e8,0xe2cacaca,0xe2eaeaea,0xc8c0c0c0,0xc8e0e0e0,0xc8c2c2c2,0xc8e2e2e2,0xc8c8c8c8,0xc8e8e8e8,0xc8cacaca,0xc8eaeaea,0xe8c0c0c0,0xe8e0e0e0,0xe8c2c2c2,0xe8e2e2e2,0xe8c8c8c8,0xe8e8e8e8,0xe8cacaca,0xe8eaeaea,0xcac0c0c0,0xcae0e0e0,0xcac2c2c2,0xcae2e2e2,0xcac8c8c8,0xcae8e8e8,0xcacacaca,0xcaeaeaea,0xeac0c0c0,0xeae0e0e0,0xeac2c2c2,0xeae2e2e2,0xeac8c8c8,0xeae8e8e8,0xeacacaca,0xeaeaeaea,0xc0c0c0c0,0xc0f0f0f0,0xc0c3c3c3,0xc0f3f3f3,0xc0cccccc,0xc0fcfcfc,0xc0cfcfcf,0xc0ffffff,0xf0c0c0c0,0xf0f0f0f0,0xf0c3c3c3,0xf0f3f3f3,0xf0cccccc,0xf0fcfcfc,0xf0cfcfcf,0xf0ffffff,0xc3c0c0c0,0xc3f0f0f0,0xc3c3c3c3,0xc3f3f3f3,0xc3cccccc,0xc3fcfcfc,0xc3cfcfcf,0xc3ffffff,0xf3c0c0c0,0xf3f0f0f0,0xf3c3c3c3,0xf3f3f3f3,0xf3cccccc,0xf3fcfcfc,0xf3cfcfcf,0xf3ffffff,0xccc0c0c0,0xccf0f0f0,0xccc3c3c3,0xccf3f3f3,0xcccccccc,0xccfcfcfc,0xcccfcfcf,0xccffffff,0xfcc0c0c0,0xfcf0f0f0,0xfcc3c3c3,0xfcf3f3f3,0xfccccccc,0xfcfcfcfc,0xfccfcfcf,0xfcffffff,0xcfc0c0c0,0xcff0f0f0,0xcfc3c3c3,0xcff3f3f3,0xcfcccccc,0xcffcfcfc,0xcfcfcfcf,0xcfffffff,0xffc0c0c0,0xfff0f0f0,0xffc3c3c3,0xfff3f3f3,0xffcccccc,0xfffcfcfc,0xffcfcfcf,0xffffffff,0xc0c0c0c0,0xc0e0e0e0,0xc0c2c2c2,0xc0e2e2e2,0xc0c8c8c8,0xc0e8e8e8,0xc0cacaca,0xc0eaeaea,0xe0c0c0c0,0xe0e0e0e0,0xe0c2c2c2,0xe0e2e2e2,0xe0c8c8c8,0xe0e8e8e8,0xe0cacaca,0xe0eaeaea,0xc2c0c0c0,0xc2e0e0e0,0xc2c2c2c2,0xc2e2e2e2,0xc2c8c8c8,0xc2e8e8e8,0xc2cacaca,0xc2eaeaea,0xe2c0c0c0,0xe2e0e0e0,0xe2c2c2c2,0xe2e2e2e2,0xe2c8c8c8,0xe2e8e8e8,0xe2cacaca,0xe2eaeaea,0xc8c0c0c0,0xc8e0e0e0,0xc8c2c2c2,0xc8e2e2e2,0xc8c8c8c8,0xc8e8e8e8,0xc8cacaca,0xc8eaeaea,0xe8c0c0c0,0xe8e0e0e0,0xe8c2c2c2,0xe8e2e2e2,0xe8c8c8c8,0xe8e8e8e8,0xe8cacaca,0xe8eaeaea,0xcac0c0c0,0xcae0e0e0,0xcac2c2c2,0xcae2e2e2,0xcac8c8c8,0xcae8e8e8,0xcacacaca,0xcaeaeaea,0xeac0c0c0,0xeae0e0e0,0xeac2c2c2,0xeae2e2e2,0xeac8c8c8,0xeae8e8e8,0xeacacaca,0xeaeaeaea,0xc0c0c0c0,0xc0f0f0f0,0xc0c3c3c3,0xc0f3f3f3,0xc0cccccc,0xc0fcfcfc,0xc0cfcfcf,0xc0ffffff,0xf0c0c0c0,0xf0f0f0f0,0xf0c3c3c3,0xf0f3f3f3,0xf0cccccc,0xf0fcfcfc,0xf0cfcfcf,0xf0ffffff,0xc3c0c0c0,0xc3f0f0f0,0xc3c3c3c3,0xc3f3f3f3,0xc3cccccc,0xc3fcfcfc,0xc3cfcfcf,0xc3ffffff,0xf3c0c0c0,0xf3f0f0f0,0xf3c3c3c3,0xf3f3f3f3,0xf3cccccc,0xf3fcfcfc,0xf3cfcfcf,0xf3ffffff,0xccc0c0c0,0xccf0f0f0,0xccc3c3c3,0xccf3f3f3,0xcccccccc,0xccfcfcfc,0xcccfcfcf,0xccffffff,0xfcc0c0c0,0xfcf0f0f0,0xfcc3c3c3,0xfcf3f3f3,0xfccccccc,0xfcfcfcfc,0xfccfcfcf,0xfcffffff,0xcfc0c0c0,0xcff0f0f0,0xcfc3c3c3,0xcff3f3f3,0xcfcccccc,0xcffcfcfc,0xcfcfcfcf,0xcfffffff,0xffc0c0c0,0xfff0f0f0,0xffc3c3c3,0xfff3f3f3,0xffcccccc,0xfffcfcfc,0xffcfcfcf,0xffffffff,
// 0xc0c0c0c0,0xe0e0c0c0,0xc2c2c0c0,0xe2e2c0c0,0xc8c8c0c0,0xe8e8c0c0,0xcacac0c0,0xeaeac0c0,0xc0c0e0e0,0xe0e0e0e0,0xc2c2e0e0,0xe2e2e0e0,0xc8c8e0e0,0xe8e8e0e0,0xcacae0e0,0xeaeae0e0,0xc0c0c2c2,0xe0e0c2c2,0xc2c2c2c2,0xe2e2c2c2,0xc8c8c2c2,0xe8e8c2c2,0xcacac2c2,0xeaeac2c2,0xc0c0e2e2,0xe0e0e2e2,0xc2c2e2e2,0xe2e2e2e2,0xc8c8e2e2,0xe8e8e2e2,0xcacae2e2,0xeaeae2e2,0xc0c0c8c8,0xe0e0c8c8,0xc2c2c8c8,0xe2e2c8c8,0xc8c8c8c8,0xe8e8c8c8,0xcacac8c8,0xeaeac8c8,0xc0c0e8e8,0xe0e0e8e8,0xc2c2e8e8,0xe2e2e8e8,0xc8c8e8e8,0xe8e8e8e8,0xcacae8e8,0xeaeae8e8,0xc0c0caca,0xe0e0caca,0xc2c2caca,0xe2e2caca,0xc8c8caca,0xe8e8caca,0xcacacaca,0xeaeacaca,0xc0c0eaea,0xe0e0eaea,0xc2c2eaea,0xe2e2eaea,0xc8c8eaea,0xe8e8eaea,0xcacaeaea,0xeaeaeaea,0xc0c0c0c0,0xf0f0c0c0,0xc3c3c0c0,0xf3f3c0c0,0xccccc0c0,0xfcfcc0c0,0xcfcfc0c0,0xffffc0c0,0xc0c0f0f0,0xf0f0f0f0,0xc3c3f0f0,0xf3f3f0f0,0xccccf0f0,0xfcfcf0f0,0xcfcff0f0,0xfffff0f0,0xc0c0c3c3,0xf0f0c3c3,0xc3c3c3c3,0xf3f3c3c3,0xccccc3c3,0xfcfcc3c3,0xcfcfc3c3,0xffffc3c3,0xc0c0f3f3,0xf0f0f3f3,0xc3c3f3f3,0xf3f3f3f3,0xccccf3f3,0xfcfcf3f3,0xcfcff3f3,0xfffff3f3,0xc0c0cccc,0xf0f0cccc,0xc3c3cccc,0xf3f3cccc,0xcccccccc,0xfcfccccc,0xcfcfcccc,0xffffcccc,0xc0c0fcfc,0xf0f0fcfc,0xc3c3fcfc,0xf3f3fcfc,0xccccfcfc,0xfcfcfcfc,0xcfcffcfc,0xfffffcfc,0xc0c0cfcf,0xf0f0cfcf,0xc3c3cfcf,0xf3f3cfcf,0xcccccfcf,0xfcfccfcf,0xcfcfcfcf,0xffffcfcf,0xc0c0ffff,0xf0f0ffff,0xc3c3ffff,0xf3f3ffff,0xccccffff,0xfcfcffff,0xcfcfffff,0xffffffff,0xc0c0c0c0,0xe0e0c0c0,0xc2c2c0c0,0xe2e2c0c0,0xc8c8c0c0,0xe8e8c0c0,0xcacac0c0,0xeaeac0c0,0xc0c0e0e0,0xe0e0e0e0,0xc2c2e0e0,0xe2e2e0e0,0xc8c8e0e0,0xe8e8e0e0,0xcacae0e0,0xeaeae0e0,0xc0c0c2c2,0xe0e0c2c2,0xc2c2c2c2,0xe2e2c2c2,0xc8c8c2c2,0xe8e8c2c2,0xcacac2c2,0xeaeac2c2,0xc0c0e2e2,0xe0e0e2e2,0xc2c2e2e2,0xe2e2e2e2,0xc8c8e2e2,0xe8e8e2e2,0xcacae2e2,0xeaeae2e2,0xc0c0c8c8,0xe0e0c8c8,0xc2c2c8c8,0xe2e2c8c8,0xc8c8c8c8,0xe8e8c8c8,0xcacac8c8,0xeaeac8c8,0xc0c0e8e8,0xe0e0e8e8,0xc2c2e8e8,0xe2e2e8e8,0xc8c8e8e8,0xe8e8e8e8,0xcacae8e8,0xeaeae8e8,0xc0c0caca,0xe0e0caca,0xc2c2caca,0xe2e2caca,0xc8c8caca,0xe8e8caca,0xcacacaca,0xeaeacaca,0xc0c0eaea,0xe0e0eaea,0xc2c2eaea,0xe2e2eaea,0xc8c8eaea,0xe8e8eaea,0xcacaeaea,0xeaeaeaea,0xc0c0c0c0,0xf0f0c0c0,0xc3c3c0c0,0xf3f3c0c0,0xccccc0c0,0xfcfcc0c0,0xcfcfc0c0,0xffffc0c0,0xc0c0f0f0,0xf0f0f0f0,0xc3c3f0f0,0xf3f3f0f0,0xccccf0f0,0xfcfcf0f0,0xcfcff0f0,0xfffff0f0,0xc0c0c3c3,0xf0f0c3c3,0xc3c3c3c3,0xf3f3c3c3,0xccccc3c3,0xfcfcc3c3,0xcfcfc3c3,0xffffc3c3,0xc0c0f3f3,0xf0f0f3f3,0xc3c3f3f3,0xf3f3f3f3,0xccccf3f3,0xfcfcf3f3,0xcfcff3f3,0xfffff3f3,0xc0c0cccc,0xf0f0cccc,0xc3c3cccc,0xf3f3cccc,0xcccccccc,0xfcfccccc,0xcfcfcccc,0xffffcccc,0xc0c0fcfc,0xf0f0fcfc,0xc3c3fcfc,0xf3f3fcfc,0xccccfcfc,0xfcfcfcfc,0xcfcffcfc,0xfffffcfc,0xc0c0cfcf,0xf0f0cfcf,0xc3c3cfcf,0xf3f3cfcf,0xcccccfcf,0xfcfccfcf,0xcfcfcfcf,0xffffcfcf,0xc0c0ffff,0xf0f0ffff,0xc3c3ffff,0xf3f3ffff,0xccccffff,0xfcfcffff,0xcfcfffff,0xffffffff,
// 0xc0c0c0c0,0xe0e0e0c0,0xc2c2c2c0,0xe2e2e2c0,0xc8c8c8c0,0xe8e8e8c0,0xcacacac0,0xeaeaeac0,0xc0c0c0e0,0xe0e0e0e0,0xc2c2c2e0,0xe2e2e2e0,0xc8c8c8e0,0xe8e8e8e0,0xcacacae0,0xeaeaeae0,0xc0c0c0c2,0xe0e0e0c2,0xc2c2c2c2,0xe2e2e2c2,0xc8c8c8c2,0xe8e8e8c2,0xcacacac2,0xeaeaeac2,0xc0c0c0e2,0xe0e0e0e2,0xc2c2c2e2,0xe2e2e2e2,0xc8c8c8e2,0xe8e8e8e2,0xcacacae2,0xeaeaeae2,0xc0c0c0c8,0xe0e0e0c8,0xc2c2c2c8,0xe2e2e2c8,0xc8c8c8c8,0xe8e8e8c8,0xcacacac8,0xeaeaeac8,0xc0c0c0e8,0xe0e0e0e8,0xc2c2c2e8,0xe2e2e2e8,0xc8c8c8e8,0xe8e8e8e8,0xcacacae8,0xeaeaeae8,0xc0c0c0ca,0xe0e0e0ca,0xc2c2c2ca,0xe2e2e2ca,0xc8c8c8ca,0xe8e8e8ca,0xcacacaca,0xeaeaeaca,0xc0c0c0ea,0xe0e0e0ea,0xc2c2c2ea,0xe2e2e2ea,0xc8c8c8ea,0xe8e8e8ea,0xcacacaea,0xeaeaeaea,0xc0c0c0c0,0xf0f0f0c0,0xc3c3c3c0,0xf3f3f3c0,0xccccccc0,0xfcfcfcc0,0xcfcfcfc0,0xffffffc0,0xc0c0c0f0,0xf0f0f0f0,0xc3c3c3f0,0xf3f3f3f0,0xccccccf0,0xfcfcfcf0,0xcfcfcff0,0xfffffff0,0xc0c0c0c3,0xf0f0f0c3,0xc3c3c3c3,0xf3f3f3c3,0xccccccc3,0xfcfcfcc3,0xcfcfcfc3,0xffffffc3,0xc0c0c0f3,0xf0f0f0f3,0xc3c3c3f3,0xf3f3f3f3,0xccccccf3,0xfcfcfcf3,0xcfcfcff3,0xfffffff3,0xc0c0c0cc,0xf0f0f0cc,0xc3c3c3cc,0xf3f3f3cc,0xcccccccc,0xfcfcfccc,0xcfcfcfcc,0xffffffcc,0xc0c0c0fc,0xf0f0f0fc,0xc3c3c3fc,0xf3f3f3fc,0xccccccfc,0xfcfcfcfc,0xcfcfcffc,0xfffffffc,0xc0c0c0cf,0xf0f0f0cf,0xc3c3c3cf,0xf3f3f3cf,0xcccccccf,0xfcfcfccf,0xcfcfcfcf,0xffffffcf,0xc0c0c0ff,0xf0f0f0ff,0xc3c3c3ff,0xf3f3f3ff,0xccccccff,0xfcfcfcff,0xcfcfcfff,0xffffffff,0xc0c0c0c0,0xe0e0e0c0,0xc2c2c2c0,0xe2e2e2c0,0xc8c8c8c0,0xe8e8e8c0,0xcacacac0,0xeaeaeac0,0xc0c0c0e0,0xe0e0e0e0,0xc2c2c2e0,0xe2e2e2e0,0xc8c8c8e0,0xe8e8e8e0,0xcacacae0,0xeaeaeae0,0xc0c0c0c2,0xe0e0e0c2,0xc2c2c2c2,0xe2e2e2c2,0xc8c8c8c2,0xe8e8e8c2,0xcacacac2,0xeaeaeac2,0xc0c0c0e2,0xe0e0e0e2,0xc2c2c2e2,0xe2e2e2e2,0xc8c8c8e2,0xe8e8e8e2,0xcacacae2,0xeaeaeae2,0xc0c0c0c8,0xe0e0e0c8,0xc2c2c2c8,0xe2e2e2c8,0xc8c8c8c8,0xe8e8e8c8,0xcacacac8,0xeaeaeac8,0xc0c0c0e8,0xe0e0e0e8,0xc2c2c2e8,0xe2e2e2e8,0xc8c8c8e8,0xe8e8e8e8,0xcacacae8,0xeaeaeae8,0xc0c0c0ca,0xe0e0e0ca,0xc2c2c2ca,0xe2e2e2ca,0xc8c8c8ca,0xe8e8e8ca,0xcacacaca,0xeaeaeaca,0xc0c0c0ea,0xe0e0e0ea,0xc2c2c2ea,0xe2e2e2ea,0xc8c8c8ea,0xe8e8e8ea,0xcacacaea,0xeaeaeaea,0xc0c0c0c0,0xf0f0f0c0,0xc3c3c3c0,0xf3f3f3c0,0xccccccc0,0xfcfcfcc0,0xcfcfcfc0,0xffffffc0,0xc0c0c0f0,0xf0f0f0f0,0xc3c3c3f0,0xf3f3f3f0,0xccccccf0,0xfcfcfcf0,0xcfcfcff0,0xfffffff0,0xc0c0c0c3,0xf0f0f0c3,0xc3c3c3c3,0xf3f3f3c3,0xccccccc3,0xfcfcfcc3,0xcfcfcfc3,0xffffffc3,0xc0c0c0f3,0xf0f0f0f3,0xc3c3c3f3,0xf3f3f3f3,0xccccccf3,0xfcfcfcf3,0xcfcfcff3,0xfffffff3,0xc0c0c0cc,0xf0f0f0cc,0xc3c3c3cc,0xf3f3f3cc,0xcccccccc,0xfcfcfccc,0xcfcfcfcc,0xffffffcc,0xc0c0c0fc,0xf0f0f0fc,0xc3c3c3fc,0xf3f3f3fc,0xccccccfc,0xfcfcfcfc,0xcfcfcffc,0xfffffffc,0xc0c0c0cf,0xf0f0f0cf,0xc3c3c3cf,0xf3f3f3cf,0xcccccccf,0xfcfcfccf,0xcfcfcfcf,0xffffffcf,0xc0c0c0ff,0xf0f0f0ff,0xc3c3c3ff,0xf3f3f3ff,0xccccccff,0xfcfcfcff,0xcfcfcfff,0xffffffff,
// 0xc0c0c0c0,0xe0e0c0e0,0xc2c2c0c2,0xe2e2c0e2,0xc8c8c0c8,0xe8e8c0e8,0xcacac0ca,0xeaeac0ea,0xc0c0e0c0,0xe0e0e0e0,0xc2c2e0c2,0xe2e2e0e2,0xc8c8e0c8,0xe8e8e0e8,0xcacae0ca,0xeaeae0ea,0xc0c0c2c0,0xe0e0c2e0,0xc2c2c2c2,0xe2e2c2e2,0xc8c8c2c8,0xe8e8c2e8,0xcacac2ca,0xeaeac2ea,0xc0c0e2c0,0xe0e0e2e0,0xc2c2e2c2,0xe2e2e2e2,0xc8c8e2c8,0xe8e8e2e8,0xcacae2ca,0xeaeae2ea,0xc0c0c8c0,0xe0e0c8e0,0xc2c2c8c2,0xe2e2c8e2,0xc8c8c8c8,0xe8e8c8e8,0xcacac8ca,0xeaeac8ea,0xc0c0e8c0,0xe0e0e8e0,0xc2c2e8c2,0xe2e2e8e2,0xc8c8e8c8,0xe8e8e8e8,0xcacae8ca,0xeaeae8ea,0xc0c0cac0,0xe0e0cae0,0xc2c2cac2,0xe2e2cae2,0xc8c8cac8,0xe8e8cae8,0xcacacaca,0xeaeacaea,0xc0c0eac0,0xe0e0eae0,0xc2c2eac2,0xe2e2eae2,0xc8c8eac8,0xe8e8eae8,0xcacaeaca,0xeaeaeaea,0xc0c0c0c0,0xf0f0c0f0,0xc3c3c0c3,0xf3f3c0f3,0xccccc0cc,0xfcfcc0fc,0xcfcfc0cf,0xffffc0ff,0xc0c0f0c0,0xf0f0f0f0,0xc3c3f0c3,0xf3f3f0f3,0xccccf0cc,0xfcfcf0fc,0xcfcff0cf,0xfffff0ff,0xc0c0c3c0,0xf0f0c3f0,0xc3c3c3c3,0xf3f3c3f3,0xccccc3cc,0xfcfcc3fc,0xcfcfc3cf,0xffffc3ff,0xc0c0f3c0,0xf0f0f3f0,0xc3c3f3c3,0xf3f3f3f3,0xccccf3cc,0xfcfcf3fc,0xcfcff3cf,0xfffff3ff,0xc0c0ccc0,0xf0f0ccf0,0xc3c3ccc3,0xf3f3ccf3,0xcccccccc,0xfcfcccfc,0xcfcfcccf,0xffffccff,0xc0c0fcc0,0xf0f0fcf0,0xc3c3fcc3,0xf3f3fcf3,0xccccfccc,0xfcfcfcfc,0xcfcffccf,0xfffffcff,0xc0c0cfc0,0xf0f0cff0,0xc3c3cfc3,0xf3f3cff3,0xcccccfcc,0xfcfccffc,0xcfcfcfcf,0xffffcfff,0xc0c0ffc0,0xf0f0fff0,0xc3c3ffc3,0xf3f3fff3,0xccccffcc,0xfcfcfffc,0xcfcfffcf,0xffffffff,0xc0c0c0c0,0xe0e0c0e0,0xc2c2c0c2,0xe2e2c0e2,0xc8c8c0c8,0xe8e8c0e8,0xcacac0ca,0xeaeac0ea,0xc0c0e0c0,0xe0e0e0e0,0xc2c2e0c2,0xe2e2e0e2,0xc8c8e0c8,0xe8e8e0e8,0xcacae0ca,0xeaeae0ea,0xc0c0c2c0,0xe0e0c2e0,0xc2c2c2c2,0xe2e2c2e2,0xc8c8c2c8,0xe8e8c2e8,0xcacac2ca,0xeaeac2ea,0xc0c0e2c0,0xe0e0e2e0,0xc2c2e2c2,0xe2e2e2e2,0xc8c8e2c8,0xe8e8e2e8,0xcacae2ca,0xeaeae2ea,0xc0c0c8c0,0xe0e0c8e0,0xc2c2c8c2,0xe2e2c8e2,0xc8c8c8c8,0xe8e8c8e8,0xcacac8ca,0xeaeac8ea,0xc0c0e8c0,0xe0e0e8e0,0xc2c2e8c2,0xe2e2e8e2,0xc8c8e8c8,0xe8e8e8e8,0xcacae8ca,0xeaeae8ea,0xc0c0cac0,0xe0e0cae0,0xc2c2cac2,0xe2e2cae2,0xc8c8cac8,0xe8e8cae8,0xcacacaca,0xeaeacaea,0xc0c0eac0,0xe0e0eae0,0xc2c2eac2,0xe2e2eae2,0xc8c8eac8,0xe8e8eae8,0xcacaeaca,0xeaeaeaea,0xc0c0c0c0,0xf0f0c0f0,0xc3c3c0c3,0xf3f3c0f3,0xccccc0cc,0xfcfcc0fc,0xcfcfc0cf,0xffffc0ff,0xc0c0f0c0,0xf0f0f0f0,0xc3c3f0c3,0xf3f3f0f3,0xccccf0cc,0xfcfcf0fc,0xcfcff0cf,0xfffff0ff,0xc0c0c3c0,0xf0f0c3f0,0xc3c3c3c3,0xf3f3c3f3,0xccccc3cc,0xfcfcc3fc,0xcfcfc3cf,0xffffc3ff,0xc0c0f3c0,0xf0f0f3f0,0xc3c3f3c3,0xf3f3f3f3,0xccccf3cc,0xfcfcf3fc,0xcfcff3cf,0xfffff3ff,0xc0c0ccc0,0xf0f0ccf0,0xc3c3ccc3,0xf3f3ccf3,0xcccccccc,0xfcfcccfc,0xcfcfcccf,0xffffccff,0xc0c0fcc0,0xf0f0fcf0,0xc3c3fcc3,0xf3f3fcf3,0xccccfccc,0xfcfcfcfc,0xcfcffccf,0xfffffcff,0xc0c0cfc0,0xf0f0cff0,0xc3c3cfc3,0xf3f3cff3,0xcccccfcc,0xfcfccffc,0xcfcfcfcf,0xffffcfff,0xc0c0ffc0,0xf0f0fff0,0xc3c3ffc3,0xf3f3fff3,0xccccffcc,0xfcfcfffc,0xcfcfffcf,0xffffffff,
// 0xc0c0c0c0,0xe0e0e0e0,0xc2c2c2c2,0xe2e2e2e2,0xc8c8c8c8,0xe8e8e8e8,0xcacacaca,0xeaeaeaea,0xc0c0c0c0,0xe0e0e0e0,0xc2c2c2c2,0xe2e2e2e2,0xc8c8c8c8,0xe8e8e8e8,0xcacacaca,0xeaeaeaea,0xc0c0c0c0,0xe0e0e0e0,0xc2c2c2c2,0xe2e2e2e2,0xc8c8c8c8,0xe8e8e8e8,0xcacacaca,0xeaeaeaea,0xc0c0c0c0,0xe0e0e0e0,0xc2c2c2c2,0xe2e2e2e2,0xc8c8c8c8,0xe8e8e8e8,0xcacacaca,0xeaeaeaea,0xc0c0c0c0,0xe0e0e0e0,0xc2c2c2c2,0xe2e2e2e2,0xc8c8c8c8,0xe8e8e8e8,0xcacacaca,0xeaeaeaea,0xc0c0c0c0,0xe0e0e0e0,0xc2c2c2c2,0xe2e2e2e2,0xc8c8c8c8,0xe8e8e8e8,0xcacacaca,0xeaeaeaea,0xc0c0c0c0,0xe0e0e0e0,0xc2c2c2c2,0xe2e2e2e2,0xc8c8c8c8,0xe8e8e8e8,0xcacacaca,0xeaeaeaea,0xc0c0c0c0,0xe0e0e0e0,0xc2c2c2c2,0xe2e2e2e2,0xc8c8c8c8,0xe8e8e8e8,0xcacacaca,0xeaeaeaea,0xc0c0c0c0,0xf0f0f0f0,0xc3c3c3c3,0xf3f3f3f3,0xcccccccc,0xfcfcfcfc,0xcfcfcfcf,0xffffffff,0xc0c0c0c0,0xf0f0f0f0,0xc3c3c3c3,0xf3f3f3f3,0xcccccccc,0xfcfcfcfc,0xcfcfcfcf,0xffffffff,0xc0c0c0c0,0xf0f0f0f0,0xc3c3c3c3,0xf3f3f3f3,0xcccccccc,0xfcfcfcfc,0xcfcfcfcf,0xffffffff,0xc0c0c0c0,0xf0f0f0f0,0xc3c3c3c3,0xf3f3f3f3,0xcccccccc,0xfcfcfcfc,0xcfcfcfcf,0xffffffff,0xc0c0c0c0,0xf0f0f0f0,0xc3c3c3c3,0xf3f3f3f3,0xcccccccc,0xfcfcfcfc,0xcfcfcfcf,0xffffffff,0xc0c0c0c0,0xf0f0f0f0,0xc3c3c3c3,0xf3f3f3f3,0xcccccccc,0xfcfcfcfc,0xcfcfcfcf,0xffffffff,0xc0c0c0c0,0xf0f0f0f0,0xc3c3c3c3,0xf3f3f3f3,0xcccccccc,0xfcfcfcfc,0xcfcfcfcf,0xffffffff,0xc0c0c0c0,0xf0f0f0f0,0xc3c3c3c3,0xf3f3f3f3,0xcccccccc,0xfcfcfcfc,0xcfcfcfcf,0xffffffff,0xc0c0c0c0,0xe0e0e0e0,0xc2c2c2c2,0xe2e2e2e2,0xc8c8c8c8,0xe8e8e8e8,0xcacacaca,0xeaeaeaea,0xc0c0c0c0,0xe0e0e0e0,0xc2c2c2c2,0xe2e2e2e2,0xc8c8c8c8,0xe8e8e8e8,0xcacacaca,0xeaeaeaea,0xc0c0c0c0,0xe0e0e0e0,0xc2c2c2c2,0xe2e2e2e2,0xc8c8c8c8,0xe8e8e8e8,0xcacacaca,0xeaeaeaea,0xc0c0c0c0,0xe0e0e0e0,0xc2c2c2c2,0xe2e2e2e2,0xc8c8c8c8,0xe8e8e8e8,0xcacacaca,0xeaeaeaea,0xc0c0c0c0,0xe0e0e0e0,0xc2c2c2c2,0xe2e2e2e2,0xc8c8c8c8,0xe8e8e8e8,0xcacacaca,0xeaeaeaea,0xc0c0c0c0,0xe0e0e0e0,0xc2c2c2c2,0xe2e2e2e2,0xc8c8c8c8,0xe8e8e8e8,0xcacacaca,0xeaeaeaea,0xc0c0c0c0,0xe0e0e0e0,0xc2c2c2c2,0xe2e2e2e2,0xc8c8c8c8,0xe8e8e8e8,0xcacacaca,0xeaeaeaea,0xc0c0c0c0,0xe0e0e0e0,0xc2c2c2c2,0xe2e2e2e2,0xc8c8c8c8,0xe8e8e8e8,0xcacacaca,0xeaeaeaea,0xc0c0c0c0,0xf0f0f0f0,0xc3c3c3c3,0xf3f3f3f3,0xcccccccc,0xfcfcfcfc,0xcfcfcfcf,0xffffffff,0xc0c0c0c0,0xf0f0f0f0,0xc3c3c3c3,0xf3f3f3f3,0xcccccccc,0xfcfcfcfc,0xcfcfcfcf,0xffffffff,0xc0c0c0c0,0xf0f0f0f0,0xc3c3c3c3,0xf3f3f3f3,0xcccccccc,0xfcfcfcfc,0xcfcfcfcf,0xffffffff,0xc0c0c0c0,0xf0f0f0f0,0xc3c3c3c3,0xf3f3f3f3,0xcccccccc,0xfcfcfcfc,0xcfcfcfcf,0xffffffff,0xc0c0c0c0,0xf0f0f0f0,0xc3c3c3c3,0xf3f3f3f3,0xcccccccc,0xfcfcfcfc,0xcfcfcfcf,0xffffffff,0xc0c0c0c0,0xf0f0f0f0,0xc3c3c3c3,0xf3f3f3f3,0xcccccccc,0xfcfcfcfc,0xcfcfcfcf,0xffffffff,0xc0c0c0c0,0xf0f0f0f0,0xc3c3c3c3,0xf3f3f3f3,0xcccccccc,0xfcfcfcfc,0xcfcfcfcf,0xffffffff,0xc0c0c0c0,0xf0f0f0f0,0xc3c3c3c3,0xf3f3f3f3,0xcccccccc,0xfcfcfcfc,0xcfcfcfcf,0xffffffff
// };

void precalcAluBytes() {

    uint16_t specfast_colors[128]; // Array for faster color calc in Draw

    unsigned int pal[2],b0,b1,b2,b3;

    // Calc array for faster color calcs in Draw
    for (int i = 0; i < (NUM_SPECTRUM_COLORS >> 1); i++) {
        // Normal
        specfast_colors[i] = spectrum_colors[i];
        specfast_colors[i << 3] = spectrum_colors[i];
        // Bright
        specfast_colors[i | 0x40] = spectrum_colors[i + (NUM_SPECTRUM_COLORS >> 1)];
        specfast_colors[(i << 3) | 0x40] = spectrum_colors[i + (NUM_SPECTRUM_COLORS >> 1)];
    }

    // Alloc ALUbytes
    for (int i = 0; i < 16; i++) {
        AluBytes[i] = (uint32_t *) heap_caps_malloc(0x400,MALLOC_CAP_INTERNAL | MALLOC_CAP_32BIT);
    }

    for (int i = 0; i < 16; i++) {
        for (int n = 0; n < 256; n++) {
            pal[0] = specfast_colors[n & 0x78];
            pal[1] = specfast_colors[n & 0x47];
            b0 = pal[(i >> 3) & 0x01];
            b1 = pal[(i >> 2) & 0x01];
            b2 = pal[(i >> 1) & 0x01];
            b3 = pal[i & 0x01];
            AluBytes[i][n]=b2 | (b3<<8) | (b0<<16) | (b1<<24);
        }
    }    

}

uint16_t zxColor(uint8_t color, uint8_t bright) {
    if (bright) color += 8;
    return spectrum_colors[color];
}

// Precalc ULA_SWAP
#define ULA_SWAP(y) ((y & 0xC0) | ((y & 0x38) >> 3) | ((y & 0x07) << 3))
void precalcULASWAP() {
    for (int i = 0; i < SPEC_H; i++) {
        offBmp[i] = ULA_SWAP(i) << 5;
        offAtt[i] = ((i >> 3) << 5) + 0x1800;
    }
}

void precalcborder32()
{
    for (int i = 0; i < 8; i++) {
        uint8_t border = zxColor(i,0);
        VIDEO::border32[i] = border | (border << 8) | (border << 16) | (border << 24);
    }
}

void VIDEO::Init() {

    const Mode& vgaMode = Config::aspect_16_9 ? vga.MODE360x200 : vga.MODE320x240;
    OSD::scrW = vgaMode.hRes;
    OSD::scrH = vgaMode.vRes / vgaMode.vDiv;
    
    const int redPins[] = {RED_PINS_6B};
    const int grePins[] = {GRE_PINS_6B};
    const int bluPins[] = {BLU_PINS_6B};
    vga.init(vgaMode, redPins, grePins, bluPins, HSYNC_PIN, VSYNC_PIN);

    precalcColors();    // precalculate colors for current VGA mode

    precalcAluBytes(); // Alloc and calc AluBytes

    precalcULASWAP();   // precalculate ULA SWAP values

    precalcborder32();  // Precalc border 32 bits values

    borderColor = 0;
    brd = border32[0];

    is169 = Config::aspect_16_9 ? 1 : 0;

    if (Config::getArch() == "48K") {
        tStatesPerLine = TSTATES_PER_LINE;
        tStatesScreen = is169 ? TS_SCREEN_360x200 : TS_SCREEN_320x240;
    } else {
        tStatesPerLine = TSTATES_PER_LINE_128;
        tStatesScreen = is169 ? TS_SCREEN_360x200_128 : TS_SCREEN_320x240_128;
    }

    #ifdef NO_VIDEO
        Draw = &NoVideo;
    #else
        Draw = &Blank;
    #endif

}

void VIDEO::Reset() {

    borderColor = 7;
    brd = border32[7];    

    is169 = Config::aspect_16_9 ? 1 : 0;
    
    if (Config::getArch() == "48K") {
        tStatesPerLine = TSTATES_PER_LINE;
        tStatesScreen = is169 ? TS_SCREEN_360x200 : TS_SCREEN_320x240;

    } else {
        tStatesPerLine = TSTATES_PER_LINE_128;
        tStatesScreen = is169 ? TS_SCREEN_360x200_128 : TS_SCREEN_320x240_128;
    }

    grmem = MemESP::videoLatch ? MemESP::ram7 : MemESP::ram5;

    #ifdef NO_VIDEO
        Draw = &NoVideo;
    #else
        Draw = &Blank;
    #endif

}

uint8_t IRAM_ATTR VIDEO::getFloatBusData48() {

    unsigned int currentTstates = CPU::tstates;

	unsigned short int line = currentTstates / 224; // int line
	if (line < 64 || line >= 256) return 0xFF;

	unsigned char halfpix = currentTstates % 224;
	if (halfpix >= 128) return 0xFF;

    switch (halfpix & 0x07) {
        case 3: { // Bitmap
            unsigned int bmpOffset = offBmp[line - 64];
            int hpoffset = (halfpix - 3) >> 2;
            return(grmem[bmpOffset + hpoffset]);
        }
        case 4: { // Attr
            unsigned int attOffset = offAtt[line - 64];
            int hpoffset = (halfpix - 3) >> 2;
            return(grmem[attOffset + hpoffset]);
        }
        case 5: { // Bitmap + 1
            unsigned int bmpOffset = offBmp[line - 64];
            int hpoffset = ((halfpix - 3) >> 2) + 1;
            return(grmem[bmpOffset + hpoffset]);
        }
        case 6: { // Attr + 1
            unsigned int attOffset = offAtt[line - 64];
            int hpoffset = ((halfpix - 3) >> 2) + 1;
            return(grmem[attOffset + hpoffset]);
        }
    }

    return(0xFF);

}

uint8_t IRAM_ATTR VIDEO::getFloatBusData128() {

    unsigned int currentTstates = CPU::tstates;

    currentTstates--;

	unsigned short int line = currentTstates / 228; // int line
	if (line < 63 || line >= 255) return 0xFF;

	unsigned char halfpix = currentTstates % 228;
	if (halfpix >= 128) return 0xFF;

    switch (halfpix & 0x07) {
        case 0: { // Bitmap
            unsigned int bmpOffset = offBmp[line - 63];
            int hpoffset = (halfpix) >> 2;
            return(grmem[bmpOffset + hpoffset]);
        }
        case 1: { // Attr
            unsigned int attOffset = offAtt[line - 63];
            int hpoffset = (halfpix) >> 2;
            return(grmem[attOffset + hpoffset]);
        }
        case 2: { // Bitmap + 1
            unsigned int bmpOffset = offBmp[line - 63];
            int hpoffset = ((halfpix) >> 2) + 1;
            return(grmem[bmpOffset + hpoffset]);
        }
        case 3: { // Attr + 1
            unsigned int attOffset = offAtt[line - 63];
            int hpoffset = ((halfpix) >> 2) + 1;
            return(grmem[attOffset + hpoffset]);
        }
    }

    return(0xFF);

}

///////////////////////////////////////////////////////////////////////////////
//  VIDEO DRAW FUNCTIONS
///////////////////////////////////////////////////////////////////////////////

void IRAM_ATTR VIDEO::NoVideo(unsigned int statestoadd, bool contended) { CPU::tstates += statestoadd; }

void IRAM_ATTR VIDEO::TopBorder_Blank(unsigned int statestoadd, bool contended) {

    CPU::tstates += statestoadd;

    if (CPU::tstates > tstateDraw) {
        video_rest = CPU::tstates - tstateDraw;
        tstateDraw += tStatesPerLine;
        lineptr32 = (uint32_t *)(vga.backBuffer[linedraw_cnt]);
        if (is169) lineptr32 += 5;
        coldraw_cnt = 0;
        Draw = &TopBorder;
        Draw(0,contended);
    }

}

void IRAM_ATTR VIDEO::TopBorder(unsigned int statestoadd, bool contended) {

    CPU::tstates += statestoadd;

    statestoadd += video_rest;
    video_rest = statestoadd & 0x03; // Mod 4
    for (int i=0; i < (statestoadd >> 2); i++) {
        *lineptr32++ = brd;
        *lineptr32++ = brd;
        if (++coldraw_cnt == 40) {
            Draw = ++linedraw_cnt == (is169 ? 4 : 24) ? &MainScreen_Blank : &TopBorder_Blank;
            return;
        }
    }

}

void IRAM_ATTR VIDEO::MainScreen_Blank(unsigned int statestoadd, bool contended) {
    
    CPU::tstates += statestoadd;

    if (CPU::tstates > tstateDraw) {
        video_rest = CPU::tstates - tstateDraw;
        tstateDraw += tStatesPerLine;
        lineptr32 = (uint32_t *)(vga.backBuffer[linedraw_cnt]);
        if (is169) lineptr32 += 5;
        coldraw_cnt = 0;
        bmpOffset = offBmp[linedraw_cnt-(is169 ? 4 : 24)];
        attOffset = offAtt[linedraw_cnt-(is169 ? 4 : 24)];
        Draw = MainScreenLB;
        Draw(0,contended);
    }

}    

void IRAM_ATTR VIDEO::MainScreenLB(unsigned int statestoadd, bool contended) {
  
    if (contended)
        statestoadd += Z80Ops::is48 ? wait_st[(CPU::tstates + 1) % 224] : wait_st[(CPU::tstates + 3) % 228];

    CPU::tstates += statestoadd;
    statestoadd += video_rest;
    video_rest = statestoadd & 0x03; // Mod 4

    for (int i=0; i < (statestoadd >> 2); i++) {    
        *lineptr32++ = brd;
        *lineptr32++ = brd;
        if (++coldraw_cnt > 3) {      
            Draw = DrawOSD169;
            video_rest += ((statestoadd >> 2) - (i + 1))  << 2;
            Draw(0,false);
            return;
        }
    }
    
}


void IRAM_ATTR VIDEO::MainScreen(unsigned int statestoadd, bool contended) {
  
    uint8_t att, bmp;

    if (contended)
        statestoadd += Z80Ops::is48 ? wait_st[(CPU::tstates + 1) % 224] : wait_st[(CPU::tstates + 3) % 228];

    CPU::tstates += statestoadd;
    
    statestoadd += video_rest;
    video_rest = statestoadd & 0x03; // Mod 4

    for (int i=0; i < (statestoadd >> 2); i++) {    

            att = grmem[attOffset++];       // get attribute byte
            bmp = (att & flashing) ? ~grmem[bmpOffset++] : grmem[bmpOffset++];
            
            *lineptr32++ = AluBytes[bmp >> 4][att];
            *lineptr32++ = AluBytes[bmp & 0xF][att];

        if (++coldraw_cnt > 35) {      
            Draw = MainScreenRB;
            video_rest += ((statestoadd >> 2) - (i + 1))  << 2;
            Draw(0,false);
            return;
        }

    }

}

void IRAM_ATTR VIDEO::MainScreen_OSD(unsigned int statestoadd, bool contended) {

    uint8_t att, bmp;

    if (contended)
        statestoadd += Z80Ops::is48 ? wait_st[(CPU::tstates + 1) % 224] : wait_st[(CPU::tstates + 3) % 228];

    CPU::tstates += statestoadd;

    statestoadd += video_rest;
    video_rest = statestoadd & 0x03; // Mod 4
    for (int i=0; i < (statestoadd >> 2); i++) {    

        if ((linedraw_cnt>175) && (linedraw_cnt<192) && (coldraw_cnt>20) && (coldraw_cnt<39)) {
            lineptr32+=2;
            attOffset++;
            bmpOffset++;
            coldraw_cnt++;
            continue;
        }

        if ((coldraw_cnt>3) && (coldraw_cnt<36)) {

            att = grmem[attOffset++];       // get attribute byte
            bmp = (att & flashing) ? ~grmem[bmpOffset++] : grmem[bmpOffset++];

            *lineptr32++ = AluBytes[bmp >> 4][att];
            *lineptr32++ = AluBytes[bmp & 0xF][att];

        } else {
            *lineptr32++ = brd;
            *lineptr32++ = brd;
        }

        if (++coldraw_cnt == 40) {
            Draw = ++linedraw_cnt == 196 ? &BottomBorder_Blank : &MainScreen_Blank;
            return;
        }

    }

}

void IRAM_ATTR VIDEO::MainScreenRB(unsigned int statestoadd, bool contended) {

    if (contended)
        statestoadd += Z80Ops::is48 ? wait_st[(CPU::tstates + 1) % 224] : wait_st[(CPU::tstates + 3) % 228];

    CPU::tstates += statestoadd;
    statestoadd += video_rest;
    video_rest = statestoadd & 0x03; // Mod 4

    for (int i=0; i < (statestoadd >> 2); i++) {
        *lineptr32++ = brd;
        *lineptr32++ = brd;

        if (++coldraw_cnt == 40) {
            Draw = ++linedraw_cnt == (is169 ? 196 : 216) ? &BottomBorder_Blank : &MainScreen_Blank;
            return;
        }

    }

}

void IRAM_ATTR VIDEO::BottomBorder_Blank(unsigned int statestoadd, bool contended) {

    CPU::tstates += statestoadd;

    if (CPU::tstates > tstateDraw) {
        video_rest = CPU::tstates - tstateDraw;
        tstateDraw += tStatesPerLine;
        lineptr32 = (uint32_t *)(vga.backBuffer[linedraw_cnt]);
        if (is169) lineptr32 += 5;        
        coldraw_cnt = 0;
        Draw = DrawOSD43;
        Draw(0,contended);
    }

}

void IRAM_ATTR VIDEO::BottomBorder(unsigned int statestoadd, bool contended) {

    CPU::tstates += statestoadd;

    statestoadd += video_rest;

    video_rest = statestoadd & 0x03; // Mod 4
    for (int i=0; i < (statestoadd >> 2); i++) {    

        *lineptr32++ = brd;
        *lineptr32++ = brd;
        if (++coldraw_cnt == 40) {
            Draw = ++linedraw_cnt == (is169 ? 200 : 240) ? &Blank : &BottomBorder_Blank ;
            return;
        }
    }
}

void IRAM_ATTR VIDEO::BottomBorder_OSD(unsigned int statestoadd, bool contended) {

    CPU::tstates += statestoadd;

    statestoadd += video_rest;

    video_rest = statestoadd & 0x03; // Mod 4
    for (int i=0; i < (statestoadd >> 2); i++) {    
        
        if ((linedraw_cnt<220) || (linedraw_cnt>235)) {
            *lineptr32++ = brd;
            *lineptr32++ = brd;
        } else {
            if ((coldraw_cnt<21) || (coldraw_cnt>38)) {
                *lineptr32++ = brd;
                *lineptr32++ = brd;
            } else lineptr32+=2;
        }
        
        if (++coldraw_cnt == 40) {
            Draw = ++linedraw_cnt == 240 ? &Blank : &BottomBorder_Blank ;
            return;
        }
    }

}

void IRAM_ATTR VIDEO::Blank(unsigned int statestoadd, bool contended) {

    CPU::tstates += statestoadd;

    if (CPU::tstates < tStatesPerLine) {
        linedraw_cnt = 0;
        tstateDraw = tStatesScreen;
        Draw = &TopBorder_Blank;
    }

}

// ///////////////////////////////////////////////////////////////////////////////
// // Flush -> Flush screen after HALT
// ///////////////////////////////////////////////////////////////////////////////
void VIDEO::Flush() {

    while (CPU::tstates < CPU::statesInFrame) {
        Draw(tStatesPerLine,false);
    }

}

